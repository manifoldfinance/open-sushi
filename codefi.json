{
	"swagger": "2.0",
	"info": {
		"title": "ConsenSys Codefi Orchestrate REST API",
		"version": "latest-c51be25b",
		"contact": {
			"name": "ConsenSys Codefi Orchestrate",
			"email": "orchestrate@consensys.net"
		}
	},
	"externalDocs": {
		"description": "Documentation of ConsenSys Codefi Orchestrate",
		"url": "https://docs.orchestrate.consensys.net/"
	},
	"paths": {
		"/accounts": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Get a list of filtered accounts",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Search accounts by provided filters",
				"parameters": [{
					"type": "array",
					"items": {
						"type": "string"
					},
					"collectionFormat": "csv",
					"description": "List of account aliases",
					"name": "aliases",
					"in": "query"
				}],
				"responses": {
					"200": {
						"description": "List of identities found",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"address": {
										"type": "string",
										"example": "1abae27a0cbfb02945720425d3b80c7e09728534"
									},
									"alias": {
										"type": "string",
										"example": "personal-account"
									},
									"attributes": {
										"type": "object",
										"additionalProperties": {
											"type": "string"
										}
									},
									"compressedPublicKey": {
										"type": "string"
									},
									"createdAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"publicKey": {
										"type": "string",
										"example": "048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"
									},
									"tenantID": {
										"type": "string",
										"example": "foo"
									},
									"updatedAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid filter in the request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Creates a new Account",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Creates a new Account",
				"parameters": [{
					"description": "Account creation request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"alias": {
								"type": "string",
								"example": "personal-account"
							},
							"attributes": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								}
							},
							"chain": {
								"type": "string",
								"example": "besu"
							}
						}
					}
				}],
				"responses": {
					"200": {
						"description": "Account object",
						"schema": {
							"type": "object",
							"properties": {
								"address": {
									"type": "string",
									"example": "1abae27a0cbfb02945720425d3b80c7e09728534"
								},
								"alias": {
									"type": "string",
									"example": "personal-account"
								},
								"attributes": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"compressedPublicKey": {
									"type": "string"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"publicKey": {
									"type": "string",
									"example": "048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"
								},
								"tenantID": {
									"type": "string",
									"example": "foo"
								},
								"updatedAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/accounts/import": {
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Creates a new Account by importing a private key",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Creates a new Account by importing a private key",
				"parameters": [{
					"description": "Account creation request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["privateKey"],
						"properties": {
							"alias": {
								"type": "string",
								"example": "personal-account"
							},
							"attributes": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								}
							},
							"chain": {
								"type": "string",
								"example": "quorum"
							},
							"privateKey": {
								"type": "string",
								"example": "66232652FDFFD802B7252A456DBD8F3ECC0352BBDE76C23B40AFE8AEBD714E2D"
							}
						}
					}
				}],
				"responses": {
					"200": {
						"description": "Account object",
						"schema": {
							"type": "object",
							"properties": {
								"address": {
									"type": "string",
									"example": "1abae27a0cbfb02945720425d3b80c7e09728534"
								},
								"alias": {
									"type": "string",
									"example": "personal-account"
								},
								"attributes": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"compressedPublicKey": {
									"type": "string"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"publicKey": {
									"type": "string",
									"example": "048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"
								},
								"tenantID": {
									"type": "string",
									"example": "foo"
								},
								"updatedAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"405": {
						"description": "Not allowed",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable entity",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/accounts/verify-signature": {
			"post": {
				"description": "Verifies if a message has been signed by the Ethereum account passed as argument",
				"consumes": ["application/json"],
				"summary": "Verifies the signature of a message",
				"parameters": [{
					"description": "signature and message to verify",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["address", "data", "signature"],
						"properties": {
							"address": {
								"type": "string",
								"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
							},
							"data": {
								"type": "string",
								"example": "my data to sign"
							},
							"signature": {
								"type": "string",
								"example": "0x6019a3c8..."
							}
						}
					}
				}],
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Invalid parameters",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/accounts/verify-typed-data-signature": {
			"post": {
				"description": "Verifies if a typed data message has been signed by the Ethereum account passed as argument following the EIP-712 standard",
				"consumes": ["application/json"],
				"summary": "Verifies the signature of a typed data message following the EIP-712 standard",
				"parameters": [{
					"description": "Typed data to sign",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["address", "data", "signature"],
							"properties": {
								"address": {
									"type": "string",
									"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
								},
								"data": {
									"type": "object",
									"required": ["domainSeparator", "message", "messageType", "types"],
									"properties": {
										"domainSeparator": {
											"type": "object",
											"required": ["chainID", "name", "version"],
											"properties": {
												"chainID": {
													"type": "integer",
													"example": 1
												},
												"name": {
													"type": "string",
													"example": "MyDApp"
												},
												"salt": {
													"type": "string",
													"example": "some-random-string"
												},
												"verifyingContract": {
													"type": "string",
													"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
												},
												"version": {
													"type": "string",
													"example": "v1.0.0"
												}
											}
										},
										"message": {
											"type": "object",
											"additionalProperties": true
										},
										"messageType": {
											"type": "string",
											"example": "Mail"
										},
										"namespace": {
											"type": "string",
											"example": "tenant_id"
										},
										"types": {
											"type": "object",
											"additionalProperties": {
												"type": "array",
												"items": {
													"type": "object",
													"required": ["name", "type"],
													"properties": {
														"name": {
															"type": "string",
															"example": "fieldName"
														},
														"type": {
															"type": "string",
															"example": "string"
														}
													}
												}
											}
										}
									}
								},
								"signature": {
									"type": "string",
									"example": "0x6019a3c8..."
								}
							}
						}, {
							"type": "object",
							"properties": {
								"domainSeparator": {
									"type": "object",
									"required": ["chainID", "name", "version"],
									"properties": {
										"chainID": {
											"type": "integer",
											"example": 1
										},
										"name": {
											"type": "string",
											"example": "MyDApp"
										},
										"salt": {
											"type": "string",
											"example": "some-random-string"
										},
										"verifyingContract": {
											"type": "string",
											"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
										},
										"version": {
											"type": "string",
											"example": "v1.0.0"
										}
									}
								}
							}
						}]
					}
				}],
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Invalid parameters",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/accounts/{address}": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Fetch a single account by address",
				"produces": ["application/json"],
				"summary": "Fetch a account by address",
				"parameters": [{
					"type": "string",
					"description": "selected account address",
					"name": "address",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Account found",
						"schema": {
							"type": "object",
							"properties": {
								"address": {
									"type": "string",
									"example": "1abae27a0cbfb02945720425d3b80c7e09728534"
								},
								"alias": {
									"type": "string",
									"example": "personal-account"
								},
								"attributes": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"compressedPublicKey": {
									"type": "string"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"publicKey": {
									"type": "string",
									"example": "048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"
								},
								"tenantID": {
									"type": "string",
									"example": "foo"
								},
								"updatedAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"patch": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Update a specific account by Address",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Update account by Address",
				"parameters": [{
					"description": "Account update request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"alias": {
								"type": "string",
								"example": "personal-account"
							},
							"attributes": {
								"type": "object",
								"additionalProperties": {
									"type": "string"
								}
							}
						}
					}
				}, {
					"type": "string",
					"description": "selected account address",
					"name": "address",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Account found",
						"schema": {
							"type": "object",
							"properties": {
								"address": {
									"type": "string",
									"example": "1abae27a0cbfb02945720425d3b80c7e09728534"
								},
								"alias": {
									"type": "string",
									"example": "personal-account"
								},
								"attributes": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"compressedPublicKey": {
									"type": "string"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"publicKey": {
									"type": "string",
									"example": "048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"
								},
								"tenantID": {
									"type": "string",
									"example": "foo"
								},
								"updatedAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/accounts/{address}/sign": {
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Sign sent data using provided account",
				"consumes": ["application/json"],
				"produces": ["text/plain"],
				"summary": "Sign arbitrary data",
				"parameters": [{
					"description": "Payload to sign",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["data"],
						"properties": {
							"data": {
								"type": "string",
								"example": "data to sign"
							}
						}
					}
				}, {
					"type": "string",
					"description": "selected account address",
					"name": "address",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Signed payload",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/accounts/{address}/sign-typed-data": {
			"post": {
				"description": "Signs typed data using ECDSA and the private key of an existing account following the EIP-712 standard",
				"consumes": ["application/json"],
				"produces": ["text/plain"],
				"summary": "Signs typed data using an existing account following the EIP-712 standard",
				"parameters": [{
					"description": "Typed data to sign",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["domainSeparator", "message", "messageType", "types"],
							"properties": {
								"domainSeparator": {
									"type": "object",
									"required": ["chainID", "name", "version"],
									"properties": {
										"chainID": {
											"type": "integer",
											"example": 1
										},
										"name": {
											"type": "string",
											"example": "MyDApp"
										},
										"salt": {
											"type": "string",
											"example": "some-random-string"
										},
										"verifyingContract": {
											"type": "string",
											"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
										},
										"version": {
											"type": "string",
											"example": "v1.0.0"
										}
									}
								},
								"message": {
									"type": "object",
									"additionalProperties": true
								},
								"messageType": {
									"type": "string",
									"example": "Mail"
								},
								"types": {
									"type": "object",
									"additionalProperties": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["name", "type"],
											"properties": {
												"name": {
													"type": "string",
													"example": "fieldName"
												},
												"type": {
													"type": "string",
													"example": "string"
												}
											}
										}
									}
								}
							}
						}, {
							"type": "object",
							"properties": {
								"domainSeparator": {
									"type": "object",
									"required": ["chainID", "name", "version"],
									"properties": {
										"chainID": {
											"type": "integer",
											"example": 1
										},
										"name": {
											"type": "string",
											"example": "MyDApp"
										},
										"salt": {
											"type": "string",
											"example": "some-random-string"
										},
										"verifyingContract": {
											"type": "string",
											"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
										},
										"version": {
											"type": "string",
											"example": "v1.0.0"
										}
									}
								},
								"types": {
									"type": "object",
									"additionalProperties": {
										"type": "object",
										"required": ["name", "type"],
										"properties": {
											"name": {
												"type": "string",
												"example": "fieldName"
											},
											"type": {
												"type": "string",
												"example": "string"
											}
										}
									}
								}
							}
						}]
					}
				}, {
					"type": "string",
					"description": "selected account address",
					"name": "address",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Signed payload",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Invalid parameters",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/chains": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"produces": ["application/json"],
				"summary": "Retrieves a list of all registered chains",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"allOf": [{
									"type": "object",
									"properties": {
										"chainID": {
											"type": "string",
											"example": "1"
										},
										"createdAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"listenerBackOffDuration": {
											"type": "string",
											"example": "5s"
										},
										"listenerCurrentBlock": {
											"type": "integer",
											"example": 0
										},
										"listenerDepth": {
											"type": "integer",
											"example": 0
										},
										"listenerExternalTxEnabled": {
											"type": "boolean",
											"example": false
										},
										"listenerStartingBlock": {
											"type": "integer",
											"example": 5000
										},
										"name": {
											"type": "string",
											"example": "mainnet"
										},
										"privateTxManager": {
											"type": "object",
											"properties": {
												"chainUUID": {
													"type": "string"
												},
												"createdAt": {
													"type": "string"
												},
												"type": {
													"type": "string"
												},
												"url": {
													"type": "string"
												},
												"uuid": {
													"type": "string"
												}
											}
										},
										"tenantID": {
											"type": "string",
											"example": "tenant"
										},
										"updatedAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"urls": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["https://mainnet.infura.io/v3/a73136601e6f4924a0baa4ed880b535e"]
										},
										"uuid": {
											"type": "string",
											"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
										}
									}
								}, {
									"type": "object",
									"properties": {
										"privateTxManager": {
											"type": "object",
											"properties": {
												"chainUUID": {
													"type": "string"
												},
												"createdAt": {
													"type": "string"
												},
												"type": {
													"type": "string"
												},
												"url": {
													"type": "string"
												},
												"uuid": {
													"type": "string"
												}
											}
										}
									}
								}]
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Registers a new chain",
				"parameters": [{
					"description": "Chain registration request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["name", "urls"],
							"properties": {
								"listener": {
									"type": "object",
									"properties": {
										"backOffDuration": {
											"type": "string",
											"example": "1s"
										},
										"depth": {
											"type": "integer",
											"example": 0
										},
										"externalTxEnabled": {
											"type": "boolean",
											"example": false
										},
										"fromBlock": {
											"type": "string",
											"example": "latest"
										}
									}
								},
								"name": {
									"type": "string",
									"example": "mainnet"
								},
								"privateTxManager": {
									"type": "object",
									"required": ["type", "url"],
									"properties": {
										"type": {
											"type": "string",
											"example": "Tessera"
										},
										"url": {
											"type": "string",
											"example": "http://tessera:3000"
										}
									}
								},
								"urls": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"example": ["https://mainnet.infura.io/v3/a73136601e6f4924a0baa4ed880b535e"]
								}
							}
						}, {
							"type": "object",
							"properties": {
								"listener": {
									"type": "object",
									"properties": {
										"backOffDuration": {
											"type": "string",
											"example": "1s"
										},
										"depth": {
											"type": "integer",
											"example": 0
										},
										"externalTxEnabled": {
											"type": "boolean",
											"example": false
										},
										"fromBlock": {
											"type": "string",
											"example": "latest"
										}
									}
								},
								"privateTxManager": {
									"type": "object",
									"required": ["type", "url"],
									"properties": {
										"type": {
											"type": "string",
											"example": "Tessera"
										},
										"url": {
											"type": "string",
											"example": "http://tessera:3000"
										}
									}
								}
							}
						}]
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"chainID": {
										"type": "string",
										"example": "1"
									},
									"createdAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"listenerBackOffDuration": {
										"type": "string",
										"example": "5s"
									},
									"listenerCurrentBlock": {
										"type": "integer",
										"example": 0
									},
									"listenerDepth": {
										"type": "integer",
										"example": 0
									},
									"listenerExternalTxEnabled": {
										"type": "boolean",
										"example": false
									},
									"listenerStartingBlock": {
										"type": "integer",
										"example": 5000
									},
									"name": {
										"type": "string",
										"example": "mainnet"
									},
									"privateTxManager": {
										"type": "object",
										"properties": {
											"chainUUID": {
												"type": "string"
											},
											"createdAt": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"uuid": {
												"type": "string"
											}
										}
									},
									"tenantID": {
										"type": "string",
										"example": "tenant"
									},
									"updatedAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"urls": {
										"type": "array",
										"items": {
											"type": "string"
										},
										"example": ["https://mainnet.infura.io/v3/a73136601e6f4924a0baa4ed880b535e"]
									},
									"uuid": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									}
								}
							}, {
								"type": "object",
								"properties": {
									"privateTxManager": {
										"type": "object",
										"properties": {
											"chainUUID": {
												"type": "string"
											},
											"createdAt": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"uuid": {
												"type": "string"
											}
										}
									}
								}
							}]
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/chains/{uuid}": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"produces": ["application/json"],
				"summary": "Retrieves a chain by ID",
				"parameters": [{
					"type": "string",
					"description": "ID of the chain",
					"name": "uuid",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"chainID": {
										"type": "string",
										"example": "1"
									},
									"createdAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"listenerBackOffDuration": {
										"type": "string",
										"example": "5s"
									},
									"listenerCurrentBlock": {
										"type": "integer",
										"example": 0
									},
									"listenerDepth": {
										"type": "integer",
										"example": 0
									},
									"listenerExternalTxEnabled": {
										"type": "boolean",
										"example": false
									},
									"listenerStartingBlock": {
										"type": "integer",
										"example": 5000
									},
									"name": {
										"type": "string",
										"example": "mainnet"
									},
									"privateTxManager": {
										"type": "object",
										"properties": {
											"chainUUID": {
												"type": "string"
											},
											"createdAt": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"uuid": {
												"type": "string"
											}
										}
									},
									"tenantID": {
										"type": "string",
										"example": "tenant"
									},
									"updatedAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"urls": {
										"type": "array",
										"items": {
											"type": "string"
										},
										"example": ["https://mainnet.infura.io/v3/a73136601e6f4924a0baa4ed880b535e"]
									},
									"uuid": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									}
								}
							}, {
								"type": "object",
								"properties": {
									"privateTxManager": {
										"type": "object",
										"properties": {
											"chainUUID": {
												"type": "string"
											},
											"createdAt": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"uuid": {
												"type": "string"
											}
										}
									}
								}
							}]
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Chain not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"delete": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"produces": ["application/json"],
				"summary": "Deletes a chain by ID",
				"parameters": [{
					"type": "string",
					"description": "ID of the chain",
					"name": "uuid",
					"in": "path",
					"required": true
				}],
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Chain not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"patch": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Updates a chain by ID",
				"parameters": [{
					"type": "string",
					"description": "ID of the chain",
					"name": "uuid",
					"in": "path",
					"required": true
				}, {
					"description": "Chain update request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"properties": {
								"listener": {
									"type": "object",
									"properties": {
										"backOffDuration": {
											"type": "string",
											"example": "1s"
										},
										"currentBlock": {
											"type": "integer",
											"example": 1
										},
										"depth": {
											"type": "integer",
											"example": 0
										},
										"externalTxEnabled": {
											"type": "boolean",
											"example": false
										}
									}
								},
								"name": {
									"type": "string",
									"example": "mainnet"
								},
								"privateTxManager": {
									"type": "object",
									"required": ["type", "url"],
									"properties": {
										"type": {
											"type": "string",
											"example": "Tessera"
										},
										"url": {
											"type": "string",
											"example": "http://tessera:3000"
										}
									}
								}
							}
						}, {
							"type": "object",
							"properties": {
								"listener": {
									"type": "object",
									"properties": {
										"backOffDuration": {
											"type": "string",
											"example": "1s"
										},
										"currentBlock": {
											"type": "integer",
											"example": 1
										},
										"depth": {
											"type": "integer",
											"example": 0
										},
										"externalTxEnabled": {
											"type": "boolean",
											"example": false
										}
									}
								},
								"privateTxManager": {
									"type": "object",
									"required": ["type", "url"],
									"properties": {
										"type": {
											"type": "string",
											"example": "Tessera"
										},
										"url": {
											"type": "string",
											"example": "http://tessera:3000"
										}
									}
								}
							}
						}]
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"chainID": {
										"type": "string",
										"example": "1"
									},
									"createdAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"listenerBackOffDuration": {
										"type": "string",
										"example": "5s"
									},
									"listenerCurrentBlock": {
										"type": "integer",
										"example": 0
									},
									"listenerDepth": {
										"type": "integer",
										"example": 0
									},
									"listenerExternalTxEnabled": {
										"type": "boolean",
										"example": false
									},
									"listenerStartingBlock": {
										"type": "integer",
										"example": 5000
									},
									"name": {
										"type": "string",
										"example": "mainnet"
									},
									"privateTxManager": {
										"type": "object",
										"properties": {
											"chainUUID": {
												"type": "string"
											},
											"createdAt": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"uuid": {
												"type": "string"
											}
										}
									},
									"tenantID": {
										"type": "string",
										"example": "tenant"
									},
									"updatedAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"urls": {
										"type": "array",
										"items": {
											"type": "string"
										},
										"example": ["https://mainnet.infura.io/v3/a73136601e6f4924a0baa4ed880b535e"]
									},
									"uuid": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									}
								}
							}, {
								"type": "object",
								"properties": {
									"privateTxManager": {
										"type": "object",
										"properties": {
											"chainUUID": {
												"type": "string"
											},
											"createdAt": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"uuid": {
												"type": "string"
											}
										}
									}
								}
							}]
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Chain not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/contracts": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Returns a list of all registered contracts",
				"produces": ["application/json"],
				"summary": "Returns a list of all registered contracts",
				"responses": {
					"200": {
						"description": "Registered contract List",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Register new solidity contract in Orchestrate",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Register new solidity contract",
				"parameters": [{
					"description": "Contract register request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["abi", "name"],
						"properties": {
							"abi": {
								"type": "object"
							},
							"bytecode": {
								"type": "string",
								"example": "0x6080604052348015600f57600080f..."
							},
							"deployedBytecode": {
								"type": "string",
								"example": "0x6080604052348015600f57600080f..."
							},
							"name": {
								"type": "string",
								"example": "ERC20"
							},
							"tag": {
								"type": "string",
								"example": "v1.0.0"
							}
						}
					}
				}],
				"responses": {
					"200": {
						"description": "Contract object",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"abi": {
										"type": "string",
										"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
									},
									"bytecode": {
										"type": "string",
										"example": "0x6080604052348015600f57600080f..."
									},
									"constructor": {
										"type": "object",
										"properties": {
											"abi": {
												"type": "string",
												"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
											},
											"signature": {
												"type": "string",
												"example": "transfer(address,uint256)"
											}
										}
									},
									"deployedBytecode": {
										"type": "string",
										"example": "0x6080604052348015600f57600080f..."
									},
									"events": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"abi": {
													"type": "string",
													"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
												},
												"signature": {
													"type": "string",
													"example": "transfer(address,uint256)"
												}
											}
										}
									},
									"methods": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"abi": {
													"type": "string",
													"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
												},
												"signature": {
													"type": "string",
													"example": "transfer(address,uint256)"
												}
											}
										}
									},
									"name": {
										"type": "string",
										"example": "ERC20"
									},
									"registry": {
										"type": "string",
										"example": "registry.consensys.net/orchestrate"
									},
									"tag": {
										"type": "string",
										"example": "v1.0.0"
									}
								}
							}, {
								"type": "object",
								"properties": {
									"constructor": {
										"type": "object",
										"properties": {
											"abi": {
												"type": "string",
												"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
											},
											"signature": {
												"type": "string",
												"example": "transfer(address,uint256)"
											}
										}
									},
									"events": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"abi": {
													"type": "string",
													"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
												},
												"signature": {
													"type": "string",
													"example": "transfer(address,uint256)"
												}
											}
										}
									},
									"methods": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"abi": {
													"type": "string",
													"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
												},
												"signature": {
													"type": "string",
													"example": "transfer(address,uint256)"
												}
											}
										}
									}
								}
							}]
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/contracts/accounts/{chain_id}/{address}": {
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Retrieve events using hash of signature",
				"produces": ["application/json"],
				"summary": "Set the codeHash of the given contract address",
				"parameters": [{
					"type": "string",
					"description": "contract deployed address",
					"name": "address",
					"in": "path",
					"required": true
				}, {
					"type": "string",
					"description": "network chain id",
					"name": "chain_id",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "List of events",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/contracts/accounts/{chain_id}/{address}/events": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Retrieve events using hash of signature",
				"produces": ["application/json"],
				"summary": "Retrieve events using hash of signature",
				"parameters": [{
					"type": "string",
					"description": "contract deployed address",
					"name": "address",
					"in": "path",
					"required": true
				}, {
					"type": "string",
					"description": "network chain id",
					"name": "chain_id",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "List of events",
						"schema": {
							"type": "object",
							"properties": {
								"defaultEvents": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"example": ["[{anonymous:false", "inputs:[{indexed:true", "name:from", "type:address}", "{indexed:true", "name:to", "type:address}", "{indexed:false", "name:value", "type:uint256}]", "name:Transfer", "type:event}", "..."]
								},
								"event": {
									"type": "string",
									"example": "{anonymous:false,inputs:[{indexed:true,name:from,type:address},{indexed:true,name:to,type:address},{indexed:false,name:value,type:uint256}],name:Transfer,type:event}"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Events not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/contracts/{name}": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Returns a list of all tags from given contract name",
				"produces": ["application/json"],
				"summary": "Returns a list of all tags",
				"responses": {
					"200": {
						"description": "List of tags",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"404": {
						"description": "contract not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/contracts/{name}/{tag}": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Fetch solidity contract data by {name} and {tag}",
				"produces": ["application/json"],
				"summary": "Fetch registered contract data",
				"parameters": [{
					"type": "string",
					"description": "solidity contract registered name",
					"name": "name",
					"in": "path",
					"required": true
				}, {
					"type": "string",
					"description": "solidity contract registered tag",
					"name": "tag",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Contract found",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"abi": {
										"type": "string",
										"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
									},
									"bytecode": {
										"type": "string",
										"example": "0x6080604052348015600f57600080f..."
									},
									"constructor": {
										"type": "object",
										"properties": {
											"abi": {
												"type": "string",
												"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
											},
											"signature": {
												"type": "string",
												"example": "transfer(address,uint256)"
											}
										}
									},
									"deployedBytecode": {
										"type": "string",
										"example": "0x6080604052348015600f57600080f..."
									},
									"events": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"abi": {
													"type": "string",
													"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
												},
												"signature": {
													"type": "string",
													"example": "transfer(address,uint256)"
												}
											}
										}
									},
									"methods": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"abi": {
													"type": "string",
													"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
												},
												"signature": {
													"type": "string",
													"example": "transfer(address,uint256)"
												}
											}
										}
									},
									"name": {
										"type": "string",
										"example": "ERC20"
									},
									"registry": {
										"type": "string",
										"example": "registry.consensys.net/orchestrate"
									},
									"tag": {
										"type": "string",
										"example": "v1.0.0"
									}
								}
							}, {
								"type": "object",
								"properties": {
									"constructor": {
										"type": "object",
										"properties": {
											"abi": {
												"type": "string",
												"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
											},
											"signature": {
												"type": "string",
												"example": "transfer(address,uint256)"
											}
										}
									},
									"events": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"abi": {
													"type": "string",
													"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
												},
												"signature": {
													"type": "string",
													"example": "transfer(address,uint256)"
												}
											}
										}
									},
									"methods": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"abi": {
													"type": "string",
													"example": "[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"
												},
												"signature": {
													"type": "string",
													"example": "transfer(address,uint256)"
												}
											}
										}
									}
								}
							}]
						}
					},
					"404": {
						"description": "Contract not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/contracts/{name}/{tag}/method-signatures": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Get method signatures of registered contract by {name} and {tag}",
				"produces": ["application/json"],
				"summary": "Get method signatures of registered contract",
				"parameters": [{
					"type": "string",
					"description": "solidity contract registered name",
					"name": "name",
					"in": "path",
					"required": true
				}, {
					"type": "string",
					"description": "solidity contract registered tag",
					"name": "tag",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "List of signatures",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"404": {
						"description": "Contract not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/faucets": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"produces": ["application/json"],
				"summary": "Retrieves a list of all registered faucets",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"required": ["amount", "cooldown", "maxBalance", "name"],
								"properties": {
									"amount": {
										"type": "string",
										"example": "60000000000000000 (wei)"
									},
									"chainRule": {
										"type": "string",
										"example": "mainnet"
									},
									"cooldown": {
										"type": "string",
										"example": "10s"
									},
									"createdAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"creditorAccount": {
										"type": "string",
										"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
									},
									"maxBalance": {
										"type": "string",
										"example": "100000000000000000 (wei)"
									},
									"name": {
										"type": "string",
										"example": "faucet-mainnet"
									},
									"tenantID": {
										"type": "string",
										"example": "foo"
									},
									"updatedAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"uuid": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Registers a new faucet",
				"parameters": [{
					"description": "Faucet registration request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["amount", "chainRule", "cooldown", "creditorAccount", "maxBalance", "name"],
						"properties": {
							"amount": {
								"type": "string",
								"example": "60000000000000000 (wei)"
							},
							"chainRule": {
								"type": "string",
								"example": "mainnet"
							},
							"cooldown": {
								"type": "string",
								"example": "10s"
							},
							"creditorAccount": {
								"type": "string",
								"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
							},
							"maxBalance": {
								"type": "string",
								"example": "100000000000000000 (wei)"
							},
							"name": {
								"type": "string",
								"example": "faucet-mainnet"
							}
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"required": ["amount", "cooldown", "maxBalance", "name"],
							"properties": {
								"amount": {
									"type": "string",
									"example": "60000000000000000 (wei)"
								},
								"chainRule": {
									"type": "string",
									"example": "mainnet"
								},
								"cooldown": {
									"type": "string",
									"example": "10s"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"creditorAccount": {
									"type": "string",
									"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
								},
								"maxBalance": {
									"type": "string",
									"example": "100000000000000000 (wei)"
								},
								"name": {
									"type": "string",
									"example": "faucet-mainnet"
								},
								"tenantID": {
									"type": "string",
									"example": "foo"
								},
								"updatedAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable entity",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/faucets/{uuid}": {
			"get": {
				"produces": ["application/json"],
				"summary": "Retrieves a faucet by ID",
				"parameters": [{
					"type": "string",
					"description": "ID of the faucet",
					"name": "uuid",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"required": ["amount", "cooldown", "maxBalance", "name"],
							"properties": {
								"amount": {
									"type": "string",
									"example": "60000000000000000 (wei)"
								},
								"chainRule": {
									"type": "string",
									"example": "mainnet"
								},
								"cooldown": {
									"type": "string",
									"example": "10s"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"creditorAccount": {
									"type": "string",
									"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
								},
								"maxBalance": {
									"type": "string",
									"example": "100000000000000000 (wei)"
								},
								"name": {
									"type": "string",
									"example": "faucet-mainnet"
								},
								"tenantID": {
									"type": "string",
									"example": "foo"
								},
								"updatedAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"404": {
						"description": "Faucet not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"delete": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"summary": "Deletes a faucet by ID",
				"parameters": [{
					"type": "string",
					"description": "ID of the faucet",
					"name": "uuid",
					"in": "path",
					"required": true
				}],
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Faucet not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"patch": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Updates a faucet by ID",
				"parameters": [{
					"type": "string",
					"description": "ID of the faucet",
					"name": "uuid",
					"in": "path",
					"required": true
				}, {
					"description": "Faucet update request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"amount": {
								"type": "string",
								"example": "60000000000000000 (wei)"
							},
							"chainRule": {
								"type": "string",
								"example": "mainnet"
							},
							"cooldown": {
								"type": "string",
								"example": "10s"
							},
							"creditorAccount": {
								"type": "string",
								"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
							},
							"maxBalance": {
								"type": "string",
								"example": "100000000000000000 (wei)"
							},
							"name": {
								"type": "string",
								"example": "faucet-mainnet"
							}
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"required": ["amount", "cooldown", "maxBalance", "name"],
							"properties": {
								"amount": {
									"type": "string",
									"example": "60000000000000000 (wei)"
								},
								"chainRule": {
									"type": "string",
									"example": "mainnet"
								},
								"cooldown": {
									"type": "string",
									"example": "10s"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"creditorAccount": {
									"type": "string",
									"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
								},
								"maxBalance": {
									"type": "string",
									"example": "100000000000000000 (wei)"
								},
								"name": {
									"type": "string",
									"example": "faucet-mainnet"
								},
								"tenantID": {
									"type": "string",
									"example": "foo"
								},
								"updatedAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Faucet not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable entity",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/jobs": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Get a list of filtered jobs",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Search jobs by provided filters",
				"parameters": [{
					"type": "array",
					"items": {
						"type": "string"
					},
					"collectionFormat": "csv",
					"description": "List of transaction hashes",
					"name": "tx_hashes",
					"in": "query"
				}, {
					"type": "string",
					"description": "Chain UUID",
					"name": "chain_uuid",
					"in": "query"
				}],
				"responses": {
					"200": {
						"description": "List of Jobs found",
						"schema": {
							"type": "array",
							"items": {
								"allOf": [{
									"type": "object",
									"properties": {
										"annotations": {
											"type": "object",
											"properties": {
												"gasPricePolicy": {
													"type": "object",
													"properties": {
														"priority": {
															"type": "string",
															"example": "very-high"
														},
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												},
												"hasBeenRetried": {
													"type": "boolean",
													"example": false
												},
												"oneTimeKey": {
													"type": "boolean",
													"example": true
												}
											}
										},
										"chainUUID": {
											"type": "string",
											"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
										},
										"createdAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"labels": {
											"type": "object",
											"additionalProperties": {
												"type": "string"
											}
										},
										"logs": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"at": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"message": {
														"type": "string",
														"example": "Log message"
													},
													"status": {
														"type": "string"
													}
												}
											}
										},
										"nextJobUUID": {
											"type": "string",
											"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
										},
										"parentJobUUID": {
											"type": "string",
											"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
										},
										"scheduleUUID": {
											"type": "string",
											"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
										},
										"status": {
											"type": "string",
											"example": "MINED"
										},
										"tenantID": {
											"type": "string",
											"example": "foo"
										},
										"transaction": {
											"type": "object",
											"properties": {
												"createdAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"data": {
													"type": "string",
													"example": "0xfe378324abcde723"
												},
												"enclaveKey": {
													"type": "string",
													"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
												},
												"from": {
													"type": "string",
													"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
												},
												"gas": {
													"type": "string",
													"example": "21000"
												},
												"gasPrice": {
													"type": "string",
													"example": "71500000 (wei)"
												},
												"hash": {
													"type": "string",
													"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
												},
												"nonce": {
													"type": "string",
													"example": "1"
												},
												"privacyGroupID": {
													"type": "string",
													"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
												},
												"privateFor": {
													"type": "array",
													"items": {
														"type": "string"
													},
													"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
												},
												"privateFrom": {
													"type": "string",
													"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
												},
												"raw": {
													"type": "string",
													"example": "0xfe378324abcde723"
												},
												"to": {
													"type": "string",
													"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
												},
												"updatedAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"value": {
													"type": "string",
													"example": "71500000 (wei)"
												}
											}
										},
										"type": {
											"type": "string",
											"example": "eth://ethereum/transaction"
										},
										"updatedAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"uuid": {
											"type": "string",
											"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
										}
									}
								}, {
									"type": "object",
									"properties": {
										"annotations": {
											"allOf": [{
												"type": "object",
												"properties": {
													"gasPricePolicy": {
														"type": "object",
														"properties": {
															"priority": {
																"type": "string",
																"example": "very-high"
															},
															"retryPolicy": {
																"type": "object",
																"properties": {
																	"increment": {
																		"type": "number",
																		"example": 0.05
																	},
																	"interval": {
																		"type": "string",
																		"example": "2m"
																	},
																	"limit": {
																		"type": "number",
																		"example": 0.5
																	}
																}
															}
														}
													},
													"hasBeenRetried": {
														"type": "boolean",
														"example": false
													},
													"oneTimeKey": {
														"type": "boolean",
														"example": true
													}
												}
											}, {
												"type": "object",
												"properties": {
													"gasPricePolicy": {
														"allOf": [{
															"type": "object",
															"properties": {
																"priority": {
																	"type": "string",
																	"example": "very-high"
																},
																"retryPolicy": {
																	"type": "object",
																	"properties": {
																		"increment": {
																			"type": "number",
																			"example": 0.05
																		},
																		"interval": {
																			"type": "string",
																			"example": "2m"
																		},
																		"limit": {
																			"type": "number",
																			"example": 0.5
																		}
																	}
																}
															}
														}, {
															"type": "object",
															"properties": {
																"retryPolicy": {
																	"type": "object",
																	"properties": {
																		"increment": {
																			"type": "number",
																			"example": 0.05
																		},
																		"interval": {
																			"type": "string",
																			"example": "2m"
																		},
																		"limit": {
																			"type": "number",
																			"example": 0.5
																		}
																	}
																}
															}
														}]
													}
												}
											}]
										},
										"logs": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"at": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"message": {
														"type": "string",
														"example": "Log message"
													},
													"status": {
														"type": "string"
													}
												}
											}
										},
										"transaction": {
											"type": "object",
											"properties": {
												"createdAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"data": {
													"type": "string",
													"example": "0xfe378324abcde723"
												},
												"enclaveKey": {
													"type": "string",
													"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
												},
												"from": {
													"type": "string",
													"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
												},
												"gas": {
													"type": "string",
													"example": "21000"
												},
												"gasPrice": {
													"type": "string",
													"example": "71500000 (wei)"
												},
												"hash": {
													"type": "string",
													"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
												},
												"nonce": {
													"type": "string",
													"example": "1"
												},
												"privacyGroupID": {
													"type": "string",
													"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
												},
												"privateFor": {
													"type": "array",
													"items": {
														"type": "string"
													},
													"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
												},
												"privateFrom": {
													"type": "string",
													"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
												},
												"raw": {
													"type": "string",
													"example": "0xfe378324abcde723"
												},
												"to": {
													"type": "string",
													"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
												},
												"updatedAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"value": {
													"type": "string",
													"example": "71500000 (wei)"
												}
											}
										}
									}
								}]
							}
						}
					},
					"400": {
						"description": "Invalid filter in the request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Creates a new job as part of an already created schedule",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Creates a new Job",
				"parameters": [{
					"description": "Job creation request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["chainUUID", "scheduleUUID", "transaction", "type"],
							"properties": {
								"annotations": {
									"type": "object",
									"properties": {
										"gasPricePolicy": {
											"type": "object",
											"properties": {
												"priority": {
													"type": "string",
													"example": "very-high"
												},
												"retryPolicy": {
													"type": "object",
													"properties": {
														"increment": {
															"type": "number",
															"example": 0.05
														},
														"interval": {
															"type": "string",
															"example": "2m"
														},
														"limit": {
															"type": "number",
															"example": 0.5
														}
													}
												}
											}
										},
										"hasBeenRetried": {
											"type": "boolean",
											"example": false
										},
										"oneTimeKey": {
											"type": "boolean",
											"example": true
										}
									}
								},
								"chainUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"labels": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"nextJobUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"parentJobUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"scheduleUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"transaction": {
									"type": "object",
									"properties": {
										"createdAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"data": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"enclaveKey": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"hash": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupID": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"updatedAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								},
								"type": {
									"type": "string",
									"example": "eth://ethereum/transaction"
								}
							}
						}, {
							"type": "object",
							"properties": {
								"annotations": {
									"allOf": [{
										"type": "object",
										"properties": {
											"gasPricePolicy": {
												"type": "object",
												"properties": {
													"priority": {
														"type": "string",
														"example": "very-high"
													},
													"retryPolicy": {
														"type": "object",
														"properties": {
															"increment": {
																"type": "number",
																"example": 0.05
															},
															"interval": {
																"type": "string",
																"example": "2m"
															},
															"limit": {
																"type": "number",
																"example": 0.5
															}
														}
													}
												}
											},
											"hasBeenRetried": {
												"type": "boolean",
												"example": false
											},
											"oneTimeKey": {
												"type": "boolean",
												"example": true
											}
										}
									}, {
										"type": "object",
										"properties": {
											"gasPricePolicy": {
												"allOf": [{
													"type": "object",
													"properties": {
														"priority": {
															"type": "string",
															"example": "very-high"
														},
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												}, {
													"type": "object",
													"properties": {
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												}]
											}
										}
									}]
								},
								"transaction": {
									"type": "object",
									"properties": {
										"createdAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"data": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"enclaveKey": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"hash": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupID": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"updatedAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								}
							}
						}]
					}
				}],
				"responses": {
					"200": {
						"description": "Created Job",
						"schema": {
							"type": "object",
							"properties": {
								"annotations": {
									"type": "object",
									"properties": {
										"gasPricePolicy": {
											"type": "object",
											"properties": {
												"priority": {
													"type": "string",
													"example": "very-high"
												},
												"retryPolicy": {
													"type": "object",
													"properties": {
														"increment": {
															"type": "number",
															"example": 0.05
														},
														"interval": {
															"type": "string",
															"example": "2m"
														},
														"limit": {
															"type": "number",
															"example": 0.5
														}
													}
												}
											}
										},
										"hasBeenRetried": {
											"type": "boolean",
											"example": false
										},
										"oneTimeKey": {
											"type": "boolean",
											"example": true
										}
									}
								},
								"chainUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"labels": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"logs": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"at": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"message": {
												"type": "string",
												"example": "Log message"
											},
											"status": {
												"type": "string"
											}
										}
									}
								},
								"nextJobUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"parentJobUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"scheduleUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"status": {
									"type": "string",
									"example": "MINED"
								},
								"tenantID": {
									"type": "string",
									"example": "foo"
								},
								"transaction": {
									"type": "object",
									"properties": {
										"createdAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"data": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"enclaveKey": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"hash": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupID": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"updatedAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								},
								"type": {
									"type": "string",
									"example": "eth://ethereum/transaction"
								},
								"updatedAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable parameters were sent",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/jobs/{uuid}": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Fetch a single job by uuid",
				"produces": ["application/json"],
				"summary": "Fetch a job by uuid",
				"parameters": [{
					"type": "string",
					"description": "UUID of the job",
					"name": "uuid",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Job found",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"annotations": {
										"type": "object",
										"properties": {
											"gasPricePolicy": {
												"type": "object",
												"properties": {
													"priority": {
														"type": "string",
														"example": "very-high"
													},
													"retryPolicy": {
														"type": "object",
														"properties": {
															"increment": {
																"type": "number",
																"example": 0.05
															},
															"interval": {
																"type": "string",
																"example": "2m"
															},
															"limit": {
																"type": "number",
																"example": 0.5
															}
														}
													}
												}
											},
											"hasBeenRetried": {
												"type": "boolean",
												"example": false
											},
											"oneTimeKey": {
												"type": "boolean",
												"example": true
											}
										}
									},
									"chainUUID": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									},
									"createdAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"labels": {
										"type": "object",
										"additionalProperties": {
											"type": "string"
										}
									},
									"logs": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"at": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"message": {
													"type": "string",
													"example": "Log message"
												},
												"status": {
													"type": "string"
												}
											}
										}
									},
									"nextJobUUID": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									},
									"parentJobUUID": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									},
									"scheduleUUID": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									},
									"status": {
										"type": "string",
										"example": "MINED"
									},
									"tenantID": {
										"type": "string",
										"example": "foo"
									},
									"transaction": {
										"type": "object",
										"properties": {
											"createdAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"data": {
												"type": "string",
												"example": "0xfe378324abcde723"
											},
											"enclaveKey": {
												"type": "string",
												"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
											},
											"from": {
												"type": "string",
												"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
											},
											"gas": {
												"type": "string",
												"example": "21000"
											},
											"gasPrice": {
												"type": "string",
												"example": "71500000 (wei)"
											},
											"hash": {
												"type": "string",
												"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
											},
											"nonce": {
												"type": "string",
												"example": "1"
											},
											"privacyGroupID": {
												"type": "string",
												"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
											},
											"privateFor": {
												"type": "array",
												"items": {
													"type": "string"
												},
												"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
											},
											"privateFrom": {
												"type": "string",
												"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
											},
											"raw": {
												"type": "string",
												"example": "0xfe378324abcde723"
											},
											"to": {
												"type": "string",
												"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
											},
											"updatedAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"value": {
												"type": "string",
												"example": "71500000 (wei)"
											}
										}
									},
									"type": {
										"type": "string",
										"example": "eth://ethereum/transaction"
									},
									"updatedAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"uuid": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									}
								}
							}, {
								"type": "object",
								"properties": {
									"annotations": {
										"allOf": [{
											"type": "object",
											"properties": {
												"gasPricePolicy": {
													"type": "object",
													"properties": {
														"priority": {
															"type": "string",
															"example": "very-high"
														},
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												},
												"hasBeenRetried": {
													"type": "boolean",
													"example": false
												},
												"oneTimeKey": {
													"type": "boolean",
													"example": true
												}
											}
										}, {
											"type": "object",
											"properties": {
												"gasPricePolicy": {
													"allOf": [{
														"type": "object",
														"properties": {
															"priority": {
																"type": "string",
																"example": "very-high"
															},
															"retryPolicy": {
																"type": "object",
																"properties": {
																	"increment": {
																		"type": "number",
																		"example": 0.05
																	},
																	"interval": {
																		"type": "string",
																		"example": "2m"
																	},
																	"limit": {
																		"type": "number",
																		"example": 0.5
																	}
																}
															}
														}
													}, {
														"type": "object",
														"properties": {
															"retryPolicy": {
																"type": "object",
																"properties": {
																	"increment": {
																		"type": "number",
																		"example": 0.05
																	},
																	"interval": {
																		"type": "string",
																		"example": "2m"
																	},
																	"limit": {
																		"type": "number",
																		"example": 0.5
																	}
																}
															}
														}
													}]
												}
											}
										}]
									}
								}
							}]
						}
					},
					"404": {
						"description": "Job not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"patch": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Update a specific job by UUID\nWARNING: Reserved for advanced users. Orchestrate does not recommend using this endpoint.",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Update job by UUID",
				"parameters": [{
					"description": "Job update request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"properties": {
								"annotations": {
									"type": "object",
									"properties": {
										"gasPricePolicy": {
											"type": "object",
											"properties": {
												"priority": {
													"type": "string",
													"example": "very-high"
												},
												"retryPolicy": {
													"type": "object",
													"properties": {
														"increment": {
															"type": "number",
															"example": 0.05
														},
														"interval": {
															"type": "string",
															"example": "2m"
														},
														"limit": {
															"type": "number",
															"example": 0.5
														}
													}
												}
											}
										},
										"hasBeenRetried": {
											"type": "boolean",
											"example": false
										},
										"oneTimeKey": {
											"type": "boolean",
											"example": true
										}
									}
								},
								"labels": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"message": {
									"type": "string",
									"example": "Update message"
								},
								"status": {
									"type": "string",
									"example": "MINED"
								},
								"transaction": {
									"type": "object",
									"properties": {
										"createdAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"data": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"enclaveKey": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"hash": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupID": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"updatedAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								}
							}
						}, {
							"type": "object",
							"properties": {
								"annotations": {
									"allOf": [{
										"type": "object",
										"properties": {
											"gasPricePolicy": {
												"type": "object",
												"properties": {
													"priority": {
														"type": "string",
														"example": "very-high"
													},
													"retryPolicy": {
														"type": "object",
														"properties": {
															"increment": {
																"type": "number",
																"example": 0.05
															},
															"interval": {
																"type": "string",
																"example": "2m"
															},
															"limit": {
																"type": "number",
																"example": 0.5
															}
														}
													}
												}
											},
											"hasBeenRetried": {
												"type": "boolean",
												"example": false
											},
											"oneTimeKey": {
												"type": "boolean",
												"example": true
											}
										}
									}, {
										"type": "object",
										"properties": {
											"gasPricePolicy": {
												"allOf": [{
													"type": "object",
													"properties": {
														"priority": {
															"type": "string",
															"example": "very-high"
														},
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												}, {
													"type": "object",
													"properties": {
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												}]
											}
										}
									}]
								},
								"transaction": {
									"type": "object",
									"properties": {
										"createdAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"data": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"enclaveKey": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"hash": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupID": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"updatedAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								}
							}
						}]
					}
				}],
				"responses": {
					"200": {
						"description": "Job found",
						"schema": {
							"type": "object",
							"properties": {
								"annotations": {
									"type": "object",
									"properties": {
										"gasPricePolicy": {
											"type": "object",
											"properties": {
												"priority": {
													"type": "string",
													"example": "very-high"
												},
												"retryPolicy": {
													"type": "object",
													"properties": {
														"increment": {
															"type": "number",
															"example": 0.05
														},
														"interval": {
															"type": "string",
															"example": "2m"
														},
														"limit": {
															"type": "number",
															"example": 0.5
														}
													}
												}
											}
										},
										"hasBeenRetried": {
											"type": "boolean",
											"example": false
										},
										"oneTimeKey": {
											"type": "boolean",
											"example": true
										}
									}
								},
								"chainUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"labels": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"logs": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"at": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"message": {
												"type": "string",
												"example": "Log message"
											},
											"status": {
												"type": "string"
											}
										}
									}
								},
								"nextJobUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"parentJobUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"scheduleUUID": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								},
								"status": {
									"type": "string",
									"example": "MINED"
								},
								"tenantID": {
									"type": "string",
									"example": "foo"
								},
								"transaction": {
									"type": "object",
									"properties": {
										"createdAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"data": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"enclaveKey": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"hash": {
											"type": "string",
											"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupID": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"updatedAt": {
											"type": "string",
											"example": "2020-07-09T12:35:42.115395Z"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								},
								"type": {
									"type": "string",
									"example": "eth://ethereum/transaction"
								},
								"updatedAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Job not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"409": {
						"description": "Job in invalid state for the given status update",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/jobs/{uuid}/resend": {
			"put": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Resend transaction of specific job by UUID, effectively executing the re-sending of transaction asynchronously",
				"produces": ["application/json"],
				"summary": "Resend Job transaction by UUID",
				"parameters": [{
					"type": "string",
					"description": "UUID of the job",
					"name": "uuid",
					"in": "path",
					"required": true
				}],
				"responses": {
					"202": {
						"description": ""
					},
					"404": {
						"description": "Job not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/jobs/{uuid}/start": {
			"put": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Starts a specific job by UUID, effectively executing the transaction asynchronously",
				"produces": ["application/json"],
				"summary": "Start a Job by UUID",
				"parameters": [{
					"type": "string",
					"description": "UUID of the job",
					"name": "uuid",
					"in": "path",
					"required": true
				}],
				"responses": {
					"202": {
						"description": ""
					},
					"404": {
						"description": "Job not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/schedules": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Get all schedules",
				"produces": ["application/json"],
				"summary": "Get all schedules",
				"responses": {
					"200": {
						"description": "List of schedules found",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"createdAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"jobs": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"annotations": {
													"type": "object",
													"properties": {
														"gasPricePolicy": {
															"type": "object",
															"properties": {
																"priority": {
																	"type": "string",
																	"example": "very-high"
																},
																"retryPolicy": {
																	"type": "object",
																	"properties": {
																		"increment": {
																			"type": "number",
																			"example": 0.05
																		},
																		"interval": {
																			"type": "string",
																			"example": "2m"
																		},
																		"limit": {
																			"type": "number",
																			"example": 0.5
																		}
																	}
																}
															}
														},
														"hasBeenRetried": {
															"type": "boolean",
															"example": false
														},
														"oneTimeKey": {
															"type": "boolean",
															"example": true
														}
													}
												},
												"chainUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"createdAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"labels": {
													"type": "object",
													"additionalProperties": {
														"type": "string"
													}
												},
												"logs": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"at": {
																"type": "string",
																"example": "2020-07-09T12:35:42.115395Z"
															},
															"message": {
																"type": "string",
																"example": "Log message"
															},
															"status": {
																"type": "string"
															}
														}
													}
												},
												"nextJobUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"parentJobUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"scheduleUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"status": {
													"type": "string",
													"example": "MINED"
												},
												"tenantID": {
													"type": "string",
													"example": "foo"
												},
												"transaction": {
													"type": "object",
													"properties": {
														"createdAt": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"data": {
															"type": "string",
															"example": "0xfe378324abcde723"
														},
														"enclaveKey": {
															"type": "string",
															"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
														},
														"from": {
															"type": "string",
															"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
														},
														"gas": {
															"type": "string",
															"example": "21000"
														},
														"gasPrice": {
															"type": "string",
															"example": "71500000 (wei)"
														},
														"hash": {
															"type": "string",
															"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
														},
														"nonce": {
															"type": "string",
															"example": "1"
														},
														"privacyGroupID": {
															"type": "string",
															"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
														},
														"privateFor": {
															"type": "array",
															"items": {
																"type": "string"
															},
															"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
														},
														"privateFrom": {
															"type": "string",
															"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
														},
														"raw": {
															"type": "string",
															"example": "0xfe378324abcde723"
														},
														"to": {
															"type": "string",
															"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
														},
														"updatedAt": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"value": {
															"type": "string",
															"example": "71500000 (wei)"
														}
													}
												},
												"type": {
													"type": "string",
													"example": "eth://ethereum/transaction"
												},
												"updatedAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"uuid": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												}
											}
										}
									},
									"tenantID": {
										"type": "string",
										"example": "tenant_id"
									},
									"uuid": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			},
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Creates a new schedule",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Creates a new Schedule",
				"parameters": [{
					"description": "Schedule creation request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object"
					}
				}],
				"responses": {
					"200": {
						"description": "Created schedule",
						"schema": {
							"allOf": [{
								"type": "object",
								"properties": {
									"createdAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"jobs": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"annotations": {
													"type": "object",
													"properties": {
														"gasPricePolicy": {
															"type": "object",
															"properties": {
																"priority": {
																	"type": "string",
																	"example": "very-high"
																},
																"retryPolicy": {
																	"type": "object",
																	"properties": {
																		"increment": {
																			"type": "number",
																			"example": 0.05
																		},
																		"interval": {
																			"type": "string",
																			"example": "2m"
																		},
																		"limit": {
																			"type": "number",
																			"example": 0.5
																		}
																	}
																}
															}
														},
														"hasBeenRetried": {
															"type": "boolean",
															"example": false
														},
														"oneTimeKey": {
															"type": "boolean",
															"example": true
														}
													}
												},
												"chainUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"createdAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"labels": {
													"type": "object",
													"additionalProperties": {
														"type": "string"
													}
												},
												"logs": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"at": {
																"type": "string",
																"example": "2020-07-09T12:35:42.115395Z"
															},
															"message": {
																"type": "string",
																"example": "Log message"
															},
															"status": {
																"type": "string"
															}
														}
													}
												},
												"nextJobUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"parentJobUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"scheduleUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"status": {
													"type": "string",
													"example": "MINED"
												},
												"tenantID": {
													"type": "string",
													"example": "foo"
												},
												"transaction": {
													"type": "object",
													"properties": {
														"createdAt": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"data": {
															"type": "string",
															"example": "0xfe378324abcde723"
														},
														"enclaveKey": {
															"type": "string",
															"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
														},
														"from": {
															"type": "string",
															"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
														},
														"gas": {
															"type": "string",
															"example": "21000"
														},
														"gasPrice": {
															"type": "string",
															"example": "71500000 (wei)"
														},
														"hash": {
															"type": "string",
															"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
														},
														"nonce": {
															"type": "string",
															"example": "1"
														},
														"privacyGroupID": {
															"type": "string",
															"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
														},
														"privateFor": {
															"type": "array",
															"items": {
																"type": "string"
															},
															"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
														},
														"privateFrom": {
															"type": "string",
															"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
														},
														"raw": {
															"type": "string",
															"example": "0xfe378324abcde723"
														},
														"to": {
															"type": "string",
															"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
														},
														"updatedAt": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"value": {
															"type": "string",
															"example": "71500000 (wei)"
														}
													}
												},
												"type": {
													"type": "string",
													"example": "eth://ethereum/transaction"
												},
												"updatedAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"uuid": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												}
											}
										}
									},
									"tenantID": {
										"type": "string",
										"example": "tenant_id"
									},
									"uuid": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									}
								}
							}, {
								"type": "object",
								"properties": {
									"jobs": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"annotations": {
													"type": "object",
													"properties": {
														"gasPricePolicy": {
															"type": "object",
															"properties": {
																"priority": {
																	"type": "string",
																	"example": "very-high"
																},
																"retryPolicy": {
																	"type": "object",
																	"properties": {
																		"increment": {
																			"type": "number",
																			"example": 0.05
																		},
																		"interval": {
																			"type": "string",
																			"example": "2m"
																		},
																		"limit": {
																			"type": "number",
																			"example": 0.5
																		}
																	}
																}
															}
														},
														"hasBeenRetried": {
															"type": "boolean",
															"example": false
														},
														"oneTimeKey": {
															"type": "boolean",
															"example": true
														}
													}
												},
												"chainUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"createdAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"labels": {
													"type": "object",
													"additionalProperties": {
														"type": "string"
													}
												},
												"logs": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"at": {
																"type": "string",
																"example": "2020-07-09T12:35:42.115395Z"
															},
															"message": {
																"type": "string",
																"example": "Log message"
															},
															"status": {
																"type": "string"
															}
														}
													}
												},
												"nextJobUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"parentJobUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"scheduleUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"status": {
													"type": "string",
													"example": "MINED"
												},
												"tenantID": {
													"type": "string",
													"example": "foo"
												},
												"transaction": {
													"type": "object",
													"properties": {
														"createdAt": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"data": {
															"type": "string",
															"example": "0xfe378324abcde723"
														},
														"enclaveKey": {
															"type": "string",
															"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
														},
														"from": {
															"type": "string",
															"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
														},
														"gas": {
															"type": "string",
															"example": "21000"
														},
														"gasPrice": {
															"type": "string",
															"example": "71500000 (wei)"
														},
														"hash": {
															"type": "string",
															"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
														},
														"nonce": {
															"type": "string",
															"example": "1"
														},
														"privacyGroupID": {
															"type": "string",
															"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
														},
														"privateFor": {
															"type": "array",
															"items": {
																"type": "string"
															},
															"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
														},
														"privateFrom": {
															"type": "string",
															"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
														},
														"raw": {
															"type": "string",
															"example": "0xfe378324abcde723"
														},
														"to": {
															"type": "string",
															"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
														},
														"updatedAt": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"value": {
															"type": "string",
															"example": "71500000 (wei)"
														}
													}
												},
												"type": {
													"type": "string",
													"example": "eth://ethereum/transaction"
												},
												"updatedAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"uuid": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												}
											}
										}
									}
								}
							}]
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable parameters were sent",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/schedules/{uuid}": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Fetch a single schedule by uuid",
				"produces": ["application/json"],
				"summary": "Fetch a schedule by uuid",
				"parameters": [{
					"type": "string",
					"description": "UUID of the schedule",
					"name": "uuid",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Schedule found",
						"schema": {
							"type": "object",
							"properties": {
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"jobs": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"annotations": {
												"type": "object",
												"properties": {
													"gasPricePolicy": {
														"type": "object",
														"properties": {
															"priority": {
																"type": "string",
																"example": "very-high"
															},
															"retryPolicy": {
																"type": "object",
																"properties": {
																	"increment": {
																		"type": "number",
																		"example": 0.05
																	},
																	"interval": {
																		"type": "string",
																		"example": "2m"
																	},
																	"limit": {
																		"type": "number",
																		"example": 0.5
																	}
																}
															}
														}
													},
													"hasBeenRetried": {
														"type": "boolean",
														"example": false
													},
													"oneTimeKey": {
														"type": "boolean",
														"example": true
													}
												}
											},
											"chainUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"createdAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"labels": {
												"type": "object",
												"additionalProperties": {
													"type": "string"
												}
											},
											"logs": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"at": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"message": {
															"type": "string",
															"example": "Log message"
														},
														"status": {
															"type": "string"
														}
													}
												}
											},
											"nextJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"parentJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"scheduleUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"status": {
												"type": "string",
												"example": "MINED"
											},
											"tenantID": {
												"type": "string",
												"example": "foo"
											},
											"transaction": {
												"type": "object",
												"properties": {
													"createdAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"data": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"enclaveKey": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
													},
													"from": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"gas": {
														"type": "string",
														"example": "21000"
													},
													"gasPrice": {
														"type": "string",
														"example": "71500000 (wei)"
													},
													"hash": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
													},
													"nonce": {
														"type": "string",
														"example": "1"
													},
													"privacyGroupID": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"privateFor": {
														"type": "array",
														"items": {
															"type": "string"
														},
														"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
													},
													"privateFrom": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"raw": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"to": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"updatedAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"value": {
														"type": "string",
														"example": "71500000 (wei)"
													}
												}
											},
											"type": {
												"type": "string",
												"example": "eth://ethereum/transaction"
											},
											"updatedAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"uuid": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											}
										}
									}
								},
								"tenantID": {
									"type": "string",
									"example": "tenant_id"
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"404": {
						"description": "Schedule not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/transactions": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Get a list of filtered transaction requests",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Search transaction requests by provided filters",
				"parameters": [{
					"type": "array",
					"items": {
						"type": "string"
					},
					"collectionFormat": "csv",
					"description": "List of idempotency keys",
					"name": "idempotency_keys",
					"in": "query"
				}],
				"responses": {
					"200": {
						"description": "List of transaction requests found",
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"chain": {
										"type": "string",
										"example": "myChain"
									},
									"createdAt": {
										"type": "string",
										"example": "2020-07-09T12:35:42.115395Z"
									},
									"idempotencyKey": {
										"type": "string",
										"example": "myIdempotencyKey"
									},
									"jobs": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"annotations": {
													"type": "object",
													"properties": {
														"gasPricePolicy": {
															"type": "object",
															"properties": {
																"priority": {
																	"type": "string",
																	"example": "very-high"
																},
																"retryPolicy": {
																	"type": "object",
																	"properties": {
																		"increment": {
																			"type": "number",
																			"example": 0.05
																		},
																		"interval": {
																			"type": "string",
																			"example": "2m"
																		},
																		"limit": {
																			"type": "number",
																			"example": 0.5
																		}
																	}
																}
															}
														},
														"hasBeenRetried": {
															"type": "boolean",
															"example": false
														},
														"oneTimeKey": {
															"type": "boolean",
															"example": true
														}
													}
												},
												"chainUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"createdAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"labels": {
													"type": "object",
													"additionalProperties": {
														"type": "string"
													}
												},
												"logs": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"at": {
																"type": "string",
																"example": "2020-07-09T12:35:42.115395Z"
															},
															"message": {
																"type": "string",
																"example": "Log message"
															},
															"status": {
																"type": "string"
															}
														}
													}
												},
												"nextJobUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"parentJobUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"scheduleUUID": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												},
												"status": {
													"type": "string",
													"example": "MINED"
												},
												"tenantID": {
													"type": "string",
													"example": "foo"
												},
												"transaction": {
													"type": "object",
													"properties": {
														"createdAt": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"data": {
															"type": "string",
															"example": "0xfe378324abcde723"
														},
														"enclaveKey": {
															"type": "string",
															"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
														},
														"from": {
															"type": "string",
															"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
														},
														"gas": {
															"type": "string",
															"example": "21000"
														},
														"gasPrice": {
															"type": "string",
															"example": "71500000 (wei)"
														},
														"hash": {
															"type": "string",
															"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
														},
														"nonce": {
															"type": "string",
															"example": "1"
														},
														"privacyGroupID": {
															"type": "string",
															"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
														},
														"privateFor": {
															"type": "array",
															"items": {
																"type": "string"
															},
															"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
														},
														"privateFrom": {
															"type": "string",
															"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
														},
														"raw": {
															"type": "string",
															"example": "0xfe378324abcde723"
														},
														"to": {
															"type": "string",
															"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
														},
														"updatedAt": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"value": {
															"type": "string",
															"example": "71500000 (wei)"
														}
													}
												},
												"type": {
													"type": "string",
													"example": "eth://ethereum/transaction"
												},
												"updatedAt": {
													"type": "string",
													"example": "2020-07-09T12:35:42.115395Z"
												},
												"uuid": {
													"type": "string",
													"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
												}
											}
										}
									},
									"params": {
										"type": "object",
										"properties": {
											"args": {
												"type": "array",
												"items": {
													"type": "object"
												}
											},
											"contractName": {
												"type": "string",
												"example": "MyContract"
											},
											"contractTag": {
												"type": "string",
												"example": "v1.1.0"
											},
											"from": {
												"type": "string",
												"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
											},
											"gas": {
												"type": "string",
												"example": "21000"
											},
											"gasPrice": {
												"type": "string",
												"example": "71500000 (wei)"
											},
											"methodSignature": {
												"type": "string",
												"example": "transfer(address,uint256)"
											},
											"nonce": {
												"type": "string",
												"example": "1"
											},
											"privacyGroupId": {
												"type": "string",
												"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
											},
											"privateFor": {
												"type": "array",
												"items": {
													"type": "string"
												},
												"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
											},
											"privateFrom": {
												"type": "string",
												"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
											},
											"protocol": {
												"type": "string",
												"example": "Tessera"
											},
											"raw": {
												"type": "string",
												"example": "0xfe378324abcde723"
											},
											"to": {
												"type": "string",
												"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
											},
											"value": {
												"type": "string",
												"example": "71500000 (wei)"
											}
										}
									},
									"uuid": {
										"type": "string",
										"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid filter in the request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/transactions/deploy-contract": {
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Creates and executes a new contract deployment request\nThe transaction can be private (Tessera, Orion).\nThe transaction can be a One Time Key transaction in 0 gas private networks",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Creates and sends a new contract deployment",
				"parameters": [{
					"description": "Deployment transaction request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["chain", "params"],
							"properties": {
								"chain": {
									"type": "string",
									"example": "myChain"
								},
								"labels": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"params": {
									"type": "object",
									"required": ["contractName"],
									"properties": {
										"args": {
											"type": "array",
											"items": {
												"type": "object"
											}
										},
										"contractName": {
											"type": "string",
											"example": "MyContract"
										},
										"contractTag": {
											"type": "string",
											"example": "v1.1.0"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"gasPricePolicy": {
											"type": "object",
											"properties": {
												"priority": {
													"type": "string",
													"example": "very-high"
												},
												"retryPolicy": {
													"type": "object",
													"properties": {
														"increment": {
															"type": "number",
															"example": 0.05
														},
														"interval": {
															"type": "string",
															"example": "2m"
														},
														"limit": {
															"type": "number",
															"example": 0.5
														}
													}
												}
											}
										},
										"oneTimeKey": {
											"type": "boolean",
											"example": true
										},
										"privacyGroupId": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"protocol": {
											"type": "string",
											"example": "Tessera"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								}
							}
						}, {
							"type": "object",
							"properties": {
								"params": {
									"allOf": [{
										"type": "object",
										"required": ["contractName"],
										"properties": {
											"args": {
												"type": "array",
												"items": {
													"type": "object"
												}
											},
											"contractName": {
												"type": "string",
												"example": "MyContract"
											},
											"contractTag": {
												"type": "string",
												"example": "v1.1.0"
											},
											"from": {
												"type": "string",
												"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
											},
											"gas": {
												"type": "string",
												"example": "21000"
											},
											"gasPrice": {
												"type": "string",
												"example": "71500000 (wei)"
											},
											"gasPricePolicy": {
												"type": "object",
												"properties": {
													"priority": {
														"type": "string",
														"example": "very-high"
													},
													"retryPolicy": {
														"type": "object",
														"properties": {
															"increment": {
																"type": "number",
																"example": 0.05
															},
															"interval": {
																"type": "string",
																"example": "2m"
															},
															"limit": {
																"type": "number",
																"example": 0.5
															}
														}
													}
												}
											},
											"oneTimeKey": {
												"type": "boolean",
												"example": true
											},
											"privacyGroupId": {
												"type": "string",
												"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
											},
											"privateFor": {
												"type": "array",
												"items": {
													"type": "string"
												},
												"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
											},
											"privateFrom": {
												"type": "string",
												"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
											},
											"protocol": {
												"type": "string",
												"example": "Tessera"
											},
											"value": {
												"type": "string",
												"example": "71500000 (wei)"
											}
										}
									}, {
										"type": "object",
										"properties": {
											"gasPricePolicy": {
												"allOf": [{
													"type": "object",
													"properties": {
														"priority": {
															"type": "string",
															"example": "very-high"
														},
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												}, {
													"type": "object",
													"properties": {
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												}]
											}
										}
									}]
								}
							}
						}]
					}
				}],
				"responses": {
					"202": {
						"description": "Created deployment transaction request",
						"schema": {
							"type": "object",
							"properties": {
								"chain": {
									"type": "string",
									"example": "myChain"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"idempotencyKey": {
									"type": "string",
									"example": "myIdempotencyKey"
								},
								"jobs": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"annotations": {
												"type": "object",
												"properties": {
													"gasPricePolicy": {
														"type": "object",
														"properties": {
															"priority": {
																"type": "string",
																"example": "very-high"
															},
															"retryPolicy": {
																"type": "object",
																"properties": {
																	"increment": {
																		"type": "number",
																		"example": 0.05
																	},
																	"interval": {
																		"type": "string",
																		"example": "2m"
																	},
																	"limit": {
																		"type": "number",
																		"example": 0.5
																	}
																}
															}
														}
													},
													"hasBeenRetried": {
														"type": "boolean",
														"example": false
													},
													"oneTimeKey": {
														"type": "boolean",
														"example": true
													}
												}
											},
											"chainUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"createdAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"labels": {
												"type": "object",
												"additionalProperties": {
													"type": "string"
												}
											},
											"logs": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"at": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"message": {
															"type": "string",
															"example": "Log message"
														},
														"status": {
															"type": "string"
														}
													}
												}
											},
											"nextJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"parentJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"scheduleUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"status": {
												"type": "string",
												"example": "MINED"
											},
											"tenantID": {
												"type": "string",
												"example": "foo"
											},
											"transaction": {
												"type": "object",
												"properties": {
													"createdAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"data": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"enclaveKey": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
													},
													"from": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"gas": {
														"type": "string",
														"example": "21000"
													},
													"gasPrice": {
														"type": "string",
														"example": "71500000 (wei)"
													},
													"hash": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
													},
													"nonce": {
														"type": "string",
														"example": "1"
													},
													"privacyGroupID": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"privateFor": {
														"type": "array",
														"items": {
															"type": "string"
														},
														"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
													},
													"privateFrom": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"raw": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"to": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"updatedAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"value": {
														"type": "string",
														"example": "71500000 (wei)"
													}
												}
											},
											"type": {
												"type": "string",
												"example": "eth://ethereum/transaction"
											},
											"updatedAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"uuid": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											}
										}
									}
								},
								"params": {
									"type": "object",
									"properties": {
										"args": {
											"type": "array",
											"items": {
												"type": "object"
											}
										},
										"contractName": {
											"type": "string",
											"example": "MyContract"
										},
										"contractTag": {
											"type": "string",
											"example": "v1.1.0"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"methodSignature": {
											"type": "string",
											"example": "transfer(address,uint256)"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupId": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"protocol": {
											"type": "string",
											"example": "Tessera"
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"409": {
						"description": "Already existing transaction",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable parameters were sent",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/transactions/send": {
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Creates and executes a new smart contract transaction request\nThe transaction can be private (Tessera, Orion).\nThe transaction can be a One Time Key transaction in 0 gas private networks",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Creates and sends a new contract transaction",
				"parameters": [{
					"description": "Contract transaction request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["chain", "params"],
							"properties": {
								"chain": {
									"type": "string",
									"example": "myChain"
								},
								"labels": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"params": {
									"type": "object",
									"required": ["methodSignature", "to"],
									"properties": {
										"args": {
											"type": "array",
											"items": {
												"type": "object"
											}
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"gasPricePolicy": {
											"type": "object",
											"properties": {
												"priority": {
													"type": "string",
													"example": "very-high"
												},
												"retryPolicy": {
													"type": "object",
													"properties": {
														"increment": {
															"type": "number",
															"example": 0.05
														},
														"interval": {
															"type": "string",
															"example": "2m"
														},
														"limit": {
															"type": "number",
															"example": 0.5
														}
													}
												}
											}
										},
										"methodSignature": {
											"type": "string",
											"example": "transfer(address,uint256)"
										},
										"oneTimeKey": {
											"type": "boolean",
											"example": true
										},
										"privacyGroupId": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"protocol": {
											"type": "string",
											"example": "Tessera"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								}
							}
						}, {
							"type": "object",
							"properties": {
								"params": {
									"allOf": [{
										"type": "object",
										"required": ["methodSignature", "to"],
										"properties": {
											"args": {
												"type": "array",
												"items": {
													"type": "object"
												}
											},
											"from": {
												"type": "string",
												"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
											},
											"gas": {
												"type": "string",
												"example": "21000"
											},
											"gasPrice": {
												"type": "string",
												"example": "71500000 (wei)"
											},
											"gasPricePolicy": {
												"type": "object",
												"properties": {
													"priority": {
														"type": "string",
														"example": "very-high"
													},
													"retryPolicy": {
														"type": "object",
														"properties": {
															"increment": {
																"type": "number",
																"example": 0.05
															},
															"interval": {
																"type": "string",
																"example": "2m"
															},
															"limit": {
																"type": "number",
																"example": 0.5
															}
														}
													}
												}
											},
											"methodSignature": {
												"type": "string",
												"example": "transfer(address,uint256)"
											},
											"oneTimeKey": {
												"type": "boolean",
												"example": true
											},
											"privacyGroupId": {
												"type": "string",
												"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
											},
											"privateFor": {
												"type": "array",
												"items": {
													"type": "string"
												},
												"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
											},
											"privateFrom": {
												"type": "string",
												"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
											},
											"protocol": {
												"type": "string",
												"example": "Tessera"
											},
											"to": {
												"type": "string",
												"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
											},
											"value": {
												"type": "string",
												"example": "71500000 (wei)"
											}
										}
									}, {
										"type": "object",
										"properties": {
											"gasPricePolicy": {
												"allOf": [{
													"type": "object",
													"properties": {
														"priority": {
															"type": "string",
															"example": "very-high"
														},
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												}, {
													"type": "object",
													"properties": {
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												}]
											}
										}
									}]
								}
							}
						}]
					}
				}],
				"responses": {
					"202": {
						"description": "Created contract transaction request",
						"schema": {
							"type": "object",
							"properties": {
								"chain": {
									"type": "string",
									"example": "myChain"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"idempotencyKey": {
									"type": "string",
									"example": "myIdempotencyKey"
								},
								"jobs": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"annotations": {
												"type": "object",
												"properties": {
													"gasPricePolicy": {
														"type": "object",
														"properties": {
															"priority": {
																"type": "string",
																"example": "very-high"
															},
															"retryPolicy": {
																"type": "object",
																"properties": {
																	"increment": {
																		"type": "number",
																		"example": 0.05
																	},
																	"interval": {
																		"type": "string",
																		"example": "2m"
																	},
																	"limit": {
																		"type": "number",
																		"example": 0.5
																	}
																}
															}
														}
													},
													"hasBeenRetried": {
														"type": "boolean",
														"example": false
													},
													"oneTimeKey": {
														"type": "boolean",
														"example": true
													}
												}
											},
											"chainUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"createdAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"labels": {
												"type": "object",
												"additionalProperties": {
													"type": "string"
												}
											},
											"logs": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"at": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"message": {
															"type": "string",
															"example": "Log message"
														},
														"status": {
															"type": "string"
														}
													}
												}
											},
											"nextJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"parentJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"scheduleUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"status": {
												"type": "string",
												"example": "MINED"
											},
											"tenantID": {
												"type": "string",
												"example": "foo"
											},
											"transaction": {
												"type": "object",
												"properties": {
													"createdAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"data": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"enclaveKey": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
													},
													"from": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"gas": {
														"type": "string",
														"example": "21000"
													},
													"gasPrice": {
														"type": "string",
														"example": "71500000 (wei)"
													},
													"hash": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
													},
													"nonce": {
														"type": "string",
														"example": "1"
													},
													"privacyGroupID": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"privateFor": {
														"type": "array",
														"items": {
															"type": "string"
														},
														"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
													},
													"privateFrom": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"raw": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"to": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"updatedAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"value": {
														"type": "string",
														"example": "71500000 (wei)"
													}
												}
											},
											"type": {
												"type": "string",
												"example": "eth://ethereum/transaction"
											},
											"updatedAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"uuid": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											}
										}
									}
								},
								"params": {
									"type": "object",
									"properties": {
										"args": {
											"type": "array",
											"items": {
												"type": "object"
											}
										},
										"contractName": {
											"type": "string",
											"example": "MyContract"
										},
										"contractTag": {
											"type": "string",
											"example": "v1.1.0"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"methodSignature": {
											"type": "string",
											"example": "transfer(address,uint256)"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupId": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"protocol": {
											"type": "string",
											"example": "Tessera"
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"409": {
						"description": "Already existing transaction",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable parameters were sent",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/transactions/send-raw": {
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Creates and executes a new raw transaction request",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Creates and sends a raw transaction",
				"parameters": [{
					"description": "Raw transaction request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["chain", "params"],
							"properties": {
								"chain": {
									"type": "string",
									"example": "myChain"
								},
								"labels": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"params": {
									"type": "object",
									"required": ["raw"],
									"properties": {
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723..."
										},
										"retryPolicy": {
											"type": "object",
											"properties": {
												"interval": {
													"type": "string",
													"example": "2m"
												}
											}
										}
									}
								}
							}
						}, {
							"type": "object",
							"properties": {
								"params": {
									"allOf": [{
										"type": "object",
										"required": ["raw"],
										"properties": {
											"raw": {
												"type": "string",
												"example": "0xfe378324abcde723..."
											},
											"retryPolicy": {
												"type": "object",
												"properties": {
													"interval": {
														"type": "string",
														"example": "2m"
													}
												}
											}
										}
									}, {
										"type": "object",
										"properties": {
											"retryPolicy": {
												"type": "object",
												"properties": {
													"interval": {
														"type": "string",
														"example": "2m"
													}
												}
											}
										}
									}]
								}
							}
						}]
					}
				}],
				"responses": {
					"202": {
						"description": "Created raw transaction request",
						"schema": {
							"type": "object",
							"properties": {
								"chain": {
									"type": "string",
									"example": "myChain"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"idempotencyKey": {
									"type": "string",
									"example": "myIdempotencyKey"
								},
								"jobs": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"annotations": {
												"type": "object",
												"properties": {
													"gasPricePolicy": {
														"type": "object",
														"properties": {
															"priority": {
																"type": "string",
																"example": "very-high"
															},
															"retryPolicy": {
																"type": "object",
																"properties": {
																	"increment": {
																		"type": "number",
																		"example": 0.05
																	},
																	"interval": {
																		"type": "string",
																		"example": "2m"
																	},
																	"limit": {
																		"type": "number",
																		"example": 0.5
																	}
																}
															}
														}
													},
													"hasBeenRetried": {
														"type": "boolean",
														"example": false
													},
													"oneTimeKey": {
														"type": "boolean",
														"example": true
													}
												}
											},
											"chainUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"createdAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"labels": {
												"type": "object",
												"additionalProperties": {
													"type": "string"
												}
											},
											"logs": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"at": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"message": {
															"type": "string",
															"example": "Log message"
														},
														"status": {
															"type": "string"
														}
													}
												}
											},
											"nextJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"parentJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"scheduleUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"status": {
												"type": "string",
												"example": "MINED"
											},
											"tenantID": {
												"type": "string",
												"example": "foo"
											},
											"transaction": {
												"type": "object",
												"properties": {
													"createdAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"data": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"enclaveKey": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
													},
													"from": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"gas": {
														"type": "string",
														"example": "21000"
													},
													"gasPrice": {
														"type": "string",
														"example": "71500000 (wei)"
													},
													"hash": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
													},
													"nonce": {
														"type": "string",
														"example": "1"
													},
													"privacyGroupID": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"privateFor": {
														"type": "array",
														"items": {
															"type": "string"
														},
														"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
													},
													"privateFrom": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"raw": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"to": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"updatedAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"value": {
														"type": "string",
														"example": "71500000 (wei)"
													}
												}
											},
											"type": {
												"type": "string",
												"example": "eth://ethereum/transaction"
											},
											"updatedAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"uuid": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											}
										}
									}
								},
								"params": {
									"type": "object",
									"properties": {
										"args": {
											"type": "array",
											"items": {
												"type": "object"
											}
										},
										"contractName": {
											"type": "string",
											"example": "MyContract"
										},
										"contractTag": {
											"type": "string",
											"example": "v1.1.0"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"methodSignature": {
											"type": "string",
											"example": "transfer(address,uint256)"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupId": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"protocol": {
											"type": "string",
											"example": "Tessera"
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"409": {
						"description": "Already existing transaction",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable parameters were sent",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/transactions/transfer": {
			"post": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Creates and executes a new transfer request",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Creates and sends a transfer transaction",
				"parameters": [{
					"description": "Transfer transaction request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["chain", "params"],
							"properties": {
								"chain": {
									"type": "string",
									"example": "myChain"
								},
								"labels": {
									"type": "object",
									"additionalProperties": {
										"type": "string"
									}
								},
								"params": {
									"type": "object",
									"required": ["from", "to", "value"],
									"properties": {
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"gasPricePolicy": {
											"type": "object",
											"properties": {
												"priority": {
													"type": "string",
													"example": "very-high"
												},
												"retryPolicy": {
													"type": "object",
													"properties": {
														"increment": {
															"type": "number",
															"example": 0.05
														},
														"interval": {
															"type": "string",
															"example": "2m"
														},
														"limit": {
															"type": "number",
															"example": 0.5
														}
													}
												}
											}
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								}
							}
						}, {
							"type": "object",
							"properties": {
								"params": {
									"allOf": [{
										"type": "object",
										"required": ["from", "to", "value"],
										"properties": {
											"from": {
												"type": "string",
												"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
											},
											"gas": {
												"type": "string",
												"example": "21000"
											},
											"gasPrice": {
												"type": "string",
												"example": "71500000 (wei)"
											},
											"gasPricePolicy": {
												"type": "object",
												"properties": {
													"priority": {
														"type": "string",
														"example": "very-high"
													},
													"retryPolicy": {
														"type": "object",
														"properties": {
															"increment": {
																"type": "number",
																"example": 0.05
															},
															"interval": {
																"type": "string",
																"example": "2m"
															},
															"limit": {
																"type": "number",
																"example": 0.5
															}
														}
													}
												}
											},
											"to": {
												"type": "string",
												"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
											},
											"value": {
												"type": "string",
												"example": "71500000 (wei)"
											}
										}
									}, {
										"type": "object",
										"properties": {
											"gasPricePolicy": {
												"allOf": [{
													"type": "object",
													"properties": {
														"priority": {
															"type": "string",
															"example": "very-high"
														},
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												}, {
													"type": "object",
													"properties": {
														"retryPolicy": {
															"type": "object",
															"properties": {
																"increment": {
																	"type": "number",
																	"example": 0.05
																},
																"interval": {
																	"type": "string",
																	"example": "2m"
																},
																"limit": {
																	"type": "number",
																	"example": 0.5
																}
															}
														}
													}
												}]
											}
										}
									}]
								}
							}
						}]
					}
				}],
				"responses": {
					"202": {
						"description": "Created transfer transaction request",
						"schema": {
							"type": "object",
							"properties": {
								"chain": {
									"type": "string",
									"example": "myChain"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"idempotencyKey": {
									"type": "string",
									"example": "myIdempotencyKey"
								},
								"jobs": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"annotations": {
												"type": "object",
												"properties": {
													"gasPricePolicy": {
														"type": "object",
														"properties": {
															"priority": {
																"type": "string",
																"example": "very-high"
															},
															"retryPolicy": {
																"type": "object",
																"properties": {
																	"increment": {
																		"type": "number",
																		"example": 0.05
																	},
																	"interval": {
																		"type": "string",
																		"example": "2m"
																	},
																	"limit": {
																		"type": "number",
																		"example": 0.5
																	}
																}
															}
														}
													},
													"hasBeenRetried": {
														"type": "boolean",
														"example": false
													},
													"oneTimeKey": {
														"type": "boolean",
														"example": true
													}
												}
											},
											"chainUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"createdAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"labels": {
												"type": "object",
												"additionalProperties": {
													"type": "string"
												}
											},
											"logs": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"at": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"message": {
															"type": "string",
															"example": "Log message"
														},
														"status": {
															"type": "string"
														}
													}
												}
											},
											"nextJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"parentJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"scheduleUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"status": {
												"type": "string",
												"example": "MINED"
											},
											"tenantID": {
												"type": "string",
												"example": "foo"
											},
											"transaction": {
												"type": "object",
												"properties": {
													"createdAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"data": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"enclaveKey": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
													},
													"from": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"gas": {
														"type": "string",
														"example": "21000"
													},
													"gasPrice": {
														"type": "string",
														"example": "71500000 (wei)"
													},
													"hash": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
													},
													"nonce": {
														"type": "string",
														"example": "1"
													},
													"privacyGroupID": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"privateFor": {
														"type": "array",
														"items": {
															"type": "string"
														},
														"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
													},
													"privateFrom": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"raw": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"to": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"updatedAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"value": {
														"type": "string",
														"example": "71500000 (wei)"
													}
												}
											},
											"type": {
												"type": "string",
												"example": "eth://ethereum/transaction"
											},
											"updatedAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"uuid": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											}
										}
									}
								},
								"params": {
									"type": "object",
									"properties": {
										"args": {
											"type": "array",
											"items": {
												"type": "object"
											}
										},
										"contractName": {
											"type": "string",
											"example": "MyContract"
										},
										"contractTag": {
											"type": "string",
											"example": "v1.1.0"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"methodSignature": {
											"type": "string",
											"example": "transfer(address,uint256)"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupId": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"protocol": {
											"type": "string",
											"example": "Tessera"
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"409": {
						"description": "Already existing transaction",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable parameters were sent",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/transactions/{uuid}": {
			"get": {
				"security": [{
					"ApiKeyAuth": []
				}, {
					"JWTAuth": []
				}],
				"description": "Fetch a single transaction request by uuid",
				"produces": ["application/json"],
				"summary": "Fetch a transaction request by uuid",
				"parameters": [{
					"type": "string",
					"description": "UUID of the transaction request",
					"name": "uuid",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Transaction request found",
						"schema": {
							"type": "object",
							"properties": {
								"chain": {
									"type": "string",
									"example": "myChain"
								},
								"createdAt": {
									"type": "string",
									"example": "2020-07-09T12:35:42.115395Z"
								},
								"idempotencyKey": {
									"type": "string",
									"example": "myIdempotencyKey"
								},
								"jobs": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"annotations": {
												"type": "object",
												"properties": {
													"gasPricePolicy": {
														"type": "object",
														"properties": {
															"priority": {
																"type": "string",
																"example": "very-high"
															},
															"retryPolicy": {
																"type": "object",
																"properties": {
																	"increment": {
																		"type": "number",
																		"example": 0.05
																	},
																	"interval": {
																		"type": "string",
																		"example": "2m"
																	},
																	"limit": {
																		"type": "number",
																		"example": 0.5
																	}
																}
															}
														}
													},
													"hasBeenRetried": {
														"type": "boolean",
														"example": false
													},
													"oneTimeKey": {
														"type": "boolean",
														"example": true
													}
												}
											},
											"chainUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"createdAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"labels": {
												"type": "object",
												"additionalProperties": {
													"type": "string"
												}
											},
											"logs": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"at": {
															"type": "string",
															"example": "2020-07-09T12:35:42.115395Z"
														},
														"message": {
															"type": "string",
															"example": "Log message"
														},
														"status": {
															"type": "string"
														}
													}
												}
											},
											"nextJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"parentJobUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"scheduleUUID": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											},
											"status": {
												"type": "string",
												"example": "MINED"
											},
											"tenantID": {
												"type": "string",
												"example": "foo"
											},
											"transaction": {
												"type": "object",
												"properties": {
													"createdAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"data": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"enclaveKey": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
													},
													"from": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"gas": {
														"type": "string",
														"example": "21000"
													},
													"gasPrice": {
														"type": "string",
														"example": "71500000 (wei)"
													},
													"hash": {
														"type": "string",
														"example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
													},
													"nonce": {
														"type": "string",
														"example": "1"
													},
													"privacyGroupID": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"privateFor": {
														"type": "array",
														"items": {
															"type": "string"
														},
														"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
													},
													"privateFrom": {
														"type": "string",
														"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
													},
													"raw": {
														"type": "string",
														"example": "0xfe378324abcde723"
													},
													"to": {
														"type": "string",
														"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
													},
													"updatedAt": {
														"type": "string",
														"example": "2020-07-09T12:35:42.115395Z"
													},
													"value": {
														"type": "string",
														"example": "71500000 (wei)"
													}
												}
											},
											"type": {
												"type": "string",
												"example": "eth://ethereum/transaction"
											},
											"updatedAt": {
												"type": "string",
												"example": "2020-07-09T12:35:42.115395Z"
											},
											"uuid": {
												"type": "string",
												"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
											}
										}
									}
								},
								"params": {
									"type": "object",
									"properties": {
										"args": {
											"type": "array",
											"items": {
												"type": "object"
											}
										},
										"contractName": {
											"type": "string",
											"example": "MyContract"
										},
										"contractTag": {
											"type": "string",
											"example": "v1.1.0"
										},
										"from": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"gas": {
											"type": "string",
											"example": "21000"
										},
										"gasPrice": {
											"type": "string",
											"example": "71500000 (wei)"
										},
										"methodSignature": {
											"type": "string",
											"example": "transfer(address,uint256)"
										},
										"nonce": {
											"type": "string",
											"example": "1"
										},
										"privacyGroupId": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"privateFor": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": ["A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=", "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="]
										},
										"privateFrom": {
											"type": "string",
											"example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
										},
										"protocol": {
											"type": "string",
											"example": "Tessera"
										},
										"raw": {
											"type": "string",
											"example": "0xfe378324abcde723"
										},
										"to": {
											"type": "string",
											"example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
										},
										"value": {
											"type": "string",
											"example": "71500000 (wei)"
										}
									}
								},
								"uuid": {
									"type": "string",
									"example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
								}
							}
						}
					},
					"404": {
						"description": "Transaction request not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Orchestrate API"]
			}
		},
		"/ethereum/accounts": {
			"get": {
				"description": "List stored ethereum account in the Vault",
				"produces": ["application/json"],
				"summary": "List Ethereum Accounts",
				"parameters": [{
					"type": "string",
					"description": "namespace where key is stored",
					"name": "namespace",
					"in": "query"
				}],
				"responses": {
					"200": {
						"description": "List of ethereum public accounts",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			},
			"post": {
				"description": "Creates a new private key, stores it in the Vault and generates a public key given a chosen elliptic curve",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Creates a new Ethereum Account",
				"parameters": [{
					"description": "Ethereum account creation request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"namespace": {
								"type": "string",
								"example": "tenant_id"
							}
						}
					}
				}],
				"responses": {
					"200": {
						"description": "Created Ethereum account",
						"schema": {
							"type": "object",
							"properties": {
								"address": {
									"type": "string",
									"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
								},
								"compressedPublicKey": {
									"type": "string",
									"example": "0x037c25564c1b6a1553fa8f204be4229439e02b728ca28697003dc1c96ae51ff2c4"
								},
								"namespace": {
									"type": "string",
									"example": "tenant_id"
								},
								"publicKey": {
									"type": "string",
									"example": "0x047c25564c1b6a1553fa8f204be4229439e02b728ca28697003dc1c96ae51ff2c4d686e8494b3c1aeab21d7c3e88f0e0b418744e3bfb747581e8a68a97503add03"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/ethereum/accounts/import": {
			"post": {
				"description": "Imports a private key, stores it in the Vault and generates a public key given a chosen elliptic curve",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Imports an Ethereum Account",
				"parameters": [{
					"description": "Ethereum account import request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["privateKey"],
						"properties": {
							"namespace": {
								"type": "string",
								"example": "tenant_id"
							},
							"privateKey": {
								"type": "string",
								"example": "fa88c4a5912f80503d6b5503880d0745f4b88a1ff90ce8f64cdd8f32cc3bc249"
							}
						}
					}
				}],
				"responses": {
					"200": {
						"description": "Imported Ethereum account",
						"schema": {
							"type": "object",
							"properties": {
								"address": {
									"type": "string",
									"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
								},
								"compressedPublicKey": {
									"type": "string",
									"example": "0x037c25564c1b6a1553fa8f204be4229439e02b728ca28697003dc1c96ae51ff2c4"
								},
								"namespace": {
									"type": "string",
									"example": "tenant_id"
								},
								"publicKey": {
									"type": "string",
									"example": "0x047c25564c1b6a1553fa8f204be4229439e02b728ca28697003dc1c96ae51ff2c4d686e8494b3c1aeab21d7c3e88f0e0b418744e3bfb747581e8a68a97503add03"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Invalid private key",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/ethereum/accounts/verify-signature": {
			"post": {
				"description": "Verifies if a message has been signed by the Ethereum account passed as argument",
				"consumes": ["application/json"],
				"summary": "Verifies the signature of a message",
				"parameters": [{
					"description": "signature and message to verify",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["address", "data", "signature"],
						"properties": {
							"address": {
								"type": "string",
								"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
							},
							"data": {
								"type": "string",
								"example": "my data to sign"
							},
							"signature": {
								"type": "string",
								"example": "0x6019a3c8..."
							}
						}
					}
				}],
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Failed to verify",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/ethereum/accounts/verify-typed-data-signature": {
			"post": {
				"description": "Verifies if a typed data message has been signed by the Ethereum account passed as argument following the EIP-712 standard",
				"consumes": ["application/json"],
				"summary": "Verifies the signature of a typed data message following the EIP-712 standard",
				"parameters": [{
					"description": "Typed data to sign",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["domainSeparator", "message", "messageType", "types"],
							"properties": {
								"domainSeparator": {
									"type": "object",
									"required": ["chainID", "name", "version"],
									"properties": {
										"chainID": {
											"type": "integer",
											"example": 1
										},
										"name": {
											"type": "string",
											"example": "MyDApp"
										},
										"salt": {
											"type": "string",
											"example": "some-random-string"
										},
										"verifyingContract": {
											"type": "string",
											"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
										},
										"version": {
											"type": "string",
											"example": "v1.0.0"
										}
									}
								},
								"message": {
									"type": "object",
									"additionalProperties": true
								},
								"messageType": {
									"type": "string",
									"example": "Mail"
								},
								"namespace": {
									"type": "string",
									"example": "tenant_id"
								},
								"types": {
									"type": "object",
									"additionalProperties": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["name", "type"],
											"properties": {
												"name": {
													"type": "string",
													"example": "fieldName"
												},
												"type": {
													"type": "string",
													"example": "string"
												}
											}
										}
									}
								}
							}
						}, {
							"type": "object",
							"properties": {
								"domainSeparator": {
									"type": "object",
									"required": ["chainID", "name", "version"],
									"properties": {
										"chainID": {
											"type": "integer",
											"example": 1
										},
										"name": {
											"type": "string",
											"example": "MyDApp"
										},
										"salt": {
											"type": "string",
											"example": "some-random-string"
										},
										"verifyingContract": {
											"type": "string",
											"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
										},
										"version": {
											"type": "string",
											"example": "v1.0.0"
										}
									}
								}
							}
						}]
					}
				}],
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Invalid parameters",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/ethereum/accounts/{address}": {
			"get": {
				"description": "Get selected stored ethereum account in the Vault",
				"produces": ["application/json"],
				"summary": "Fetch Ethereum Account",
				"parameters": [{
					"type": "string",
					"description": "selected account address",
					"name": "address",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Ethereum account",
						"schema": {
							"type": "object",
							"properties": {
								"address": {
									"type": "string",
									"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
								},
								"compressedPublicKey": {
									"type": "string",
									"example": "0x037c25564c1b6a1553fa8f204be4229439e02b728ca28697003dc1c96ae51ff2c4"
								},
								"namespace": {
									"type": "string",
									"example": "tenant_id"
								},
								"publicKey": {
									"type": "string",
									"example": "0x047c25564c1b6a1553fa8f204be4229439e02b728ca28697003dc1c96ae51ff2c4d686e8494b3c1aeab21d7c3e88f0e0b418744e3bfb747581e8a68a97503add03"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/ethereum/accounts/{address}/sign": {
			"post": {
				"description": "Signs an arbitrary message using ECDSA and the private key of an existing Ethereum account",
				"consumes": ["application/json"],
				"produces": ["text/plain"],
				"summary": "Signs an arbitrary message using an existing Ethereum account",
				"parameters": [{
					"description": "Payload to sign",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["data"],
						"properties": {
							"data": {
								"type": "string",
								"example": "my data to sign"
							},
							"namespace": {
								"type": "string",
								"example": "tenant_id"
							}
						}
					}
				}, {
					"type": "string",
					"description": "selected account address",
					"name": "address",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Signed payload",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/ethereum/accounts/{address}/sign-eea-transaction": {
			"post": {
				"description": "Signs an EEA private transaction using ECDSA and the private key of an existing account",
				"consumes": ["application/json"],
				"produces": ["text/plain"],
				"summary": "Signs an EEA private transaction using an existing account",
				"parameters": [{
					"description": "EEA private transaction to sign",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["gasLimit", "gasPrice"],
						"properties": {
							"amount": {
								"type": "string",
								"example": "100000000000"
							},
							"data": {
								"type": "string",
								"example": "0xfeaeee..."
							},
							"gasLimit": {
								"type": "integer",
								"example": 21000
							},
							"gasPrice": {
								"type": "string",
								"example": "100000000000"
							},
							"namespace": {
								"type": "string",
								"example": "tenant_id"
							},
							"nonce": {
								"type": "integer",
								"example": 1
							},
							"to": {
								"type": "string",
								"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
							}
						}
					}
				}, {
					"type": "string",
					"description": "selected account address",
					"name": "address",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Signed payload",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/ethereum/accounts/{address}/sign-quorum-private-transaction": {
			"post": {
				"description": "Signs a Quorum private transaction using ECDSA and the private key of an existing account",
				"consumes": ["application/json"],
				"produces": ["text/plain"],
				"summary": "Signs a Quorum private transaction using an existing account",
				"parameters": [{
					"description": "Quorum private transaction to sign",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["gasLimit", "gasPrice"],
						"properties": {
							"amount": {
								"type": "string",
								"example": "100000000000"
							},
							"data": {
								"type": "string",
								"example": "0xfeaeee..."
							},
							"gasLimit": {
								"type": "integer",
								"example": 21000
							},
							"gasPrice": {
								"type": "string",
								"example": "100000000000"
							},
							"namespace": {
								"type": "string",
								"example": "tenant_id"
							},
							"nonce": {
								"type": "integer",
								"example": 1
							},
							"to": {
								"type": "string",
								"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
							}
						}
					}
				}, {
					"type": "string",
					"description": "selected account address",
					"name": "address",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Signed payload",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/ethereum/accounts/{address}/sign-transaction": {
			"post": {
				"description": "Signs an Ethereum transaction using ECDSA and the private key of an existing account",
				"consumes": ["application/json"],
				"produces": ["text/plain"],
				"summary": "Signs an Ethereum transaction using an existing account",
				"parameters": [{
					"description": "Ethereum transaction to sign",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["chainID", "gasLimit", "gasPrice"],
						"properties": {
							"amount": {
								"type": "string",
								"example": "100000000000"
							},
							"chainID": {
								"type": "string",
								"example": "1 (mainnet)"
							},
							"data": {
								"type": "string",
								"example": "0xfeaeee..."
							},
							"gasLimit": {
								"type": "integer",
								"example": 21000
							},
							"gasPrice": {
								"type": "string",
								"example": "100000000000"
							},
							"namespace": {
								"type": "string",
								"example": "tenant_id"
							},
							"nonce": {
								"type": "integer",
								"example": 1
							},
							"to": {
								"type": "string",
								"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
							}
						}
					}
				}, {
					"type": "string",
					"description": "selected account address",
					"name": "address",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Signed payload",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/ethereum/accounts/{address}/sign-typed-data": {
			"post": {
				"description": "Signs typed data using ECDSA and the private key of an existing account following the EIP-712 standard",
				"consumes": ["application/json"],
				"produces": ["text/plain"],
				"summary": "Signs typed data using an existing account following the EIP-712 standard",
				"parameters": [{
					"description": "Typed data to sign",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"allOf": [{
							"type": "object",
							"required": ["domainSeparator", "message", "messageType", "types"],
							"properties": {
								"domainSeparator": {
									"type": "object",
									"required": ["chainID", "name", "version"],
									"properties": {
										"chainID": {
											"type": "integer",
											"example": 1
										},
										"name": {
											"type": "string",
											"example": "MyDApp"
										},
										"salt": {
											"type": "string",
											"example": "some-random-string"
										},
										"verifyingContract": {
											"type": "string",
											"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
										},
										"version": {
											"type": "string",
											"example": "v1.0.0"
										}
									}
								},
								"message": {
									"type": "object",
									"additionalProperties": true
								},
								"messageType": {
									"type": "string",
									"example": "Mail"
								},
								"namespace": {
									"type": "string",
									"example": "tenant_id"
								},
								"types": {
									"type": "object",
									"additionalProperties": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["name", "type"],
											"properties": {
												"name": {
													"type": "string",
													"example": "fieldName"
												},
												"type": {
													"type": "string",
													"example": "string"
												}
											}
										}
									}
								}
							}
						}, {
							"type": "object",
							"properties": {
								"domainSeparator": {
									"type": "object",
									"required": ["chainID", "name", "version"],
									"properties": {
										"chainID": {
											"type": "integer",
											"example": 1
										},
										"name": {
											"type": "string",
											"example": "MyDApp"
										},
										"salt": {
											"type": "string",
											"example": "some-random-string"
										},
										"verifyingContract": {
											"type": "string",
											"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
										},
										"version": {
											"type": "string",
											"example": "v1.0.0"
										}
									}
								},
								"types": {
									"type": "object",
									"additionalProperties": {
										"type": "array",
										"items": {
											"type": "object",
											"required": ["name", "type"],
											"properties": {
												"name": {
													"type": "string",
													"example": "fieldName"
												},
												"type": {
													"type": "string",
													"example": "string"
												}
											}
										}
									}
								}
							}
						}]
					}
				}, {
					"type": "string",
					"description": "selected account address",
					"name": "address",
					"in": "path",
					"required": true
				}],
				"responses": {
					"200": {
						"description": "Signed payload",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Invalid parameters",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/ethereum/namespaces": {
			"get": {
				"description": "List ethereum namespaces in the Vault",
				"produces": ["application/json"],
				"summary": "List Ethereum Namespaces",
				"responses": {
					"200": {
						"description": "List of ethereum public namespaces",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/zk-snarks/accounts": {
			"get": {
				"description": "List stored zk-snarks account in the Vault",
				"produces": ["application/json"],
				"summary": "List zk-snarks Accounts",
				"parameters": [{
					"type": "string",
					"description": "namespace where key is stored",
					"name": "namespace",
					"in": "query"
				}],
				"responses": {
					"200": {
						"description": "List of zk-snarks public accounts",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			},
			"post": {
				"description": "Creates a new private key, stores it in the Vault and generates a public key given a chosen elliptic curve",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"summary": "Creates a new zk-snarks Account",
				"parameters": [{
					"description": "zk-snarks account creation request",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"properties": {
							"namespace": {
								"type": "string",
								"example": "tenant_id"
							}
						}
					}
				}],
				"responses": {
					"200": {
						"description": "Created zk-snarks account",
						"schema": {
							"type": "object",
							"properties": {
								"curve": {
									"type": "string",
									"example": "bn256"
								},
								"namespace": {
									"type": "string",
									"example": "tenant_id"
								},
								"publicKey": {
									"type": "string",
									"example": "20199690451585786844338768304582194735444460424798515739606133903768949456887"
								},
								"signingAlgorithm": {
									"type": "string",
									"example": "eddsa"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/zk-snarks/accounts/verify-signature": {
			"post": {
				"description": "Verifies if a message has been signed by the zk-snarks account passed as argument",
				"consumes": ["application/json"],
				"summary": "Verifies the signature of a message",
				"parameters": [{
					"description": "signature and message to verify",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["data", "publicKey", "signature"],
						"properties": {
							"data": {
								"type": "string",
								"example": "my data to sign"
							},
							"publicKey": {
								"type": "string",
								"example": "0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"
							},
							"signature": {
								"type": "string",
								"example": "0x6019a3c8..."
							}
						}
					}
				}],
				"responses": {
					"204": {
						"description": ""
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"422": {
						"description": "Failed to verify",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/zk-snarks/accounts/{publicKey}": {
			"get": {
				"description": "Get selected stored zk-snarks account in the Vault",
				"produces": ["application/json"],
				"summary": "Fetch zk-snarks Account",
				"parameters": [{
					"type": "string",
					"description": "namespace where key is stored",
					"name": "namespace",
					"in": "query"
				}],
				"responses": {
					"200": {
						"description": "zk-snarks account",
						"schema": {
							"type": "object",
							"properties": {
								"curve": {
									"type": "string",
									"example": "bn256"
								},
								"namespace": {
									"type": "string",
									"example": "tenant_id"
								},
								"publicKey": {
									"type": "string",
									"example": "20199690451585786844338768304582194735444460424798515739606133903768949456887"
								},
								"signingAlgorithm": {
									"type": "string",
									"example": "eddsa"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/zk-snarks/accounts/{publicKey}/sign": {
			"post": {
				"description": "Signs an arbitrary message using EDDSA and the private key of an existing zk-snarks account",
				"consumes": ["application/json"],
				"produces": ["text/plain"],
				"summary": "Signs an arbitrary message using an existing zk-snarks account",
				"parameters": [{
					"description": "Payload to sign",
					"name": "request",
					"in": "body",
					"required": true,
					"schema": {
						"type": "object",
						"required": ["data"],
						"properties": {
							"data": {
								"type": "string",
								"example": "my data to sign"
							},
							"namespace": {
								"type": "string",
								"example": "tenant_id"
							}
						}
					}
				}],
				"responses": {
					"200": {
						"description": "Signed payload",
						"schema": {
							"type": "string"
						}
					},
					"400": {
						"description": "Invalid request",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"404": {
						"description": "Account not found",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		},
		"/zk-snarks/namespaces": {
			"get": {
				"description": "List zk-snarks namespaces in the Vault",
				"produces": ["application/json"],
				"summary": "List zk-snarks Namespaces",
				"responses": {
					"200": {
						"description": "List of zk-snarks public namespaces",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"type": "integer",
									"example": 24000
								},
								"message": {
									"type": "string",
									"example": "error message"
								}
							}
						}
					}
				},
				"tags": ["Key Manager"]
			}
		}
	},
	"securityDefinitions": {
		"ApiKeyAuth": {
			"type": "apiKey",
			"name": "X-API-Key",
			"in": "header"
		},
		"JWTAuth": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header"
		}
	}
}
